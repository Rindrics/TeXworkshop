<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   xmlns:ns1="https://launchpad.net/jessyink"
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   width="339.78mm"
   height="210mm"
   viewBox="0 0 339.78 210"
   version="1.1"
   id="svg6526"
   inkscape:version="0.92.1 r15371"
   sodipodi:docname="プレゼン1_趣旨説明.svg">
  <sodipodi:namedview
     id="base"
     pagecolor="#000000"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:pageopacity="0"
     inkscape:pageshadow="2"
     inkscape:zoom="0.5449157"
     inkscape:cx="694.60273"
     inkscape:cy="390.19373"
     inkscape:document-units="mm"
     inkscape:current-layer="layer1"
     showgrid="false"
     objecttolerance="1"
     guidetolerance="1"
     inkscape:window-width="1920"
     inkscape:window-height="1017"
     inkscape:window-x="-8"
     inkscape:window-y="-8"
     inkscape:window-maximized="1"
     width="297mm" />
  <defs
     id="defs6520">
    <marker
       inkscape:isstock="true"
       style="overflow:visible"
       id="marker8702"
       refX="0"
       refY="0"
       orient="auto"
       inkscape:stockid="Arrow1Mend">
      <path
         transform="matrix(-0.4,0,0,-0.4,-4,0)"
         style="fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:1.00000003pt;stroke-opacity:1"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         id="path8700"
         inkscape:connector-curvature="0" />
    </marker>
    <marker
       inkscape:stockid="Arrow1Mend"
       orient="auto"
       refY="0"
       refX="0"
       id="marker8642"
       style="overflow:visible"
       inkscape:isstock="true"
       inkscape:collect="always">
      <path
         id="path8640"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         style="fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:1.00000003pt;stroke-opacity:1"
         transform="matrix(-0.4,0,0,-0.4,-4,0)"
         inkscape:connector-curvature="0" />
    </marker>
    <marker
       inkscape:stockid="Arrow1Mend"
       orient="auto"
       refY="0"
       refX="0"
       id="marker8449"
       style="overflow:visible"
       inkscape:isstock="true">
      <path
         id="path8447"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         style="fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:1.00000003pt;stroke-opacity:1"
         transform="matrix(-0.4,0,0,-0.4,-4,0)"
         inkscape:connector-curvature="0" />
    </marker>
    <marker
       inkscape:stockid="Arrow1Mend"
       orient="auto"
       refY="0"
       refX="0"
       id="marker8409"
       style="overflow:visible"
       inkscape:isstock="true">
      <path
         id="path8407"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         style="fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:1.00000003pt;stroke-opacity:1"
         transform="matrix(-0.4,0,0,-0.4,-4,0)"
         inkscape:connector-curvature="0" />
    </marker>
    <marker
       inkscape:stockid="Arrow1Mend"
       orient="auto"
       refY="0"
       refX="0"
       id="marker8363"
       style="overflow:visible"
       inkscape:isstock="true">
      <path
         id="path8361"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         style="fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:1.00000003pt;stroke-opacity:1"
         transform="matrix(-0.4,0,0,-0.4,-4,0)"
         inkscape:connector-curvature="0" />
    </marker>
    <marker
       inkscape:isstock="true"
       style="overflow:visible"
       id="marker5596"
       refX="0"
       refY="0"
       orient="auto"
       inkscape:stockid="Arrow1Mend">
      <path
         inkscape:connector-curvature="0"
         transform="matrix(-0.4,0,0,-0.4,-4,0)"
         style="fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:1.00000003pt;stroke-opacity:1"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         id="path5594" />
    </marker>
    <marker
       inkscape:stockid="Arrow1Mend"
       orient="auto"
       refY="0"
       refX="0"
       id="Arrow1Mend"
       style="overflow:visible"
       inkscape:isstock="true"
       inkscape:collect="always">
      <path
         id="path5091"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         style="fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:1.00000003pt;stroke-opacity:1"
         transform="matrix(-0.4,0,0,-0.4,-4,0)"
         inkscape:connector-curvature="0" />
    </marker>
    <linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient5064"
       id="linearGradient5066"
       x1="650.75922"
       y1="525.36328"
       x2="521.49127"
       y2="525.36328"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(0.21114975,0,0,0.33817438,31.656105,93.283529)" />
    <linearGradient
       inkscape:collect="always"
       id="linearGradient5064">
      <stop
         style="stop-color:#ffffff;stop-opacity:1;"
         offset="0"
         id="stop5060" />
      <stop
         style="stop-color:#ffffff;stop-opacity:0;"
         offset="1"
         id="stop5062" />
    </linearGradient>
    <filter
       inkscape:collect="always"
       style="color-interpolation-filters:sRGB"
       id="filter6516"
       x="-0.059999999"
       width="1.12"
       y="-0.059999999"
       height="1.12">
      <feGaussianBlur
         inkscape:collect="always"
         stdDeviation="5.46875"
         id="feGaussianBlur6518" />
    </filter>
    <filter
       inkscape:collect="always"
       style="color-interpolation-filters:sRGB"
       id="filter8626"
       x="-0.013440513"
       width="1.026881"
       y="-0.027241135"
       height="1.0544823">
      <feGaussianBlur
         inkscape:collect="always"
         stdDeviation="1.2841553"
         id="feGaussianBlur8628" />
    </filter>
    <filter
       inkscape:collect="always"
       style="color-interpolation-filters:sRGB"
       id="filter5160"
       x="-0.035999998"
       width="1.072"
       y="-0.035999998"
       height="1.072">
      <feGaussianBlur
         inkscape:collect="always"
         stdDeviation="0.64890329"
         id="feGaussianBlur5162" />
    </filter>
    <filter
       inkscape:collect="always"
       style="color-interpolation-filters:sRGB"
       id="filter5236"
       x="-0.036861733"
       width="1.0737236"
       y="-0.06881769"
       height="1.1376354">
      <feGaussianBlur
         inkscape:collect="always"
         stdDeviation="15.603265"
         id="feGaussianBlur5238" />
    </filter>
    <filter
       inkscape:collect="always"
       style="color-interpolation-filters:sRGB"
       id="filter8464"
       x="-0.089811737"
       width="1.1796235"
       y="-0.18075781"
       height="1.3615156">
      <feGaussianBlur
         inkscape:collect="always"
         stdDeviation="0.30030575"
         id="feGaussianBlur8466" />
    </filter>
  </defs>
  <metadata
     id="metadata6523">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title></dc:title>
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <g
     ns1:masterSlide="masterSlide"
     style="display:inline"
     inkscape:label="ML"
     id="layer2"
     inkscape:groupmode="layer"
     sodipodi:insensitive="true"
     transform="translate(0,3.1738282e-6)">
    <rect
       y="-97.502197"
       x="-137.89595"
       height="405.00439"
       width="572.79193"
       id="rect7680"
       style="opacity:1;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:0.70555556;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" />
  </g>
  <g
     style="display:inline"
     inkscape:label="L1"
     inkscape:groupmode="layer"
     id="layer1"
     transform="translate(0,-86.999997)">
    <path
       style="fill:none;stroke:#ffaaaa;stroke-width:5.29166651;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       d="m 226.26181,179.06319 c 5.61065,-0.2431 11.04338,-0.79813 17.17448,-0.60518 3.05194,0.0897 4.91993,0.49138 7.96195,0.58691 7.20168,0.33091 14.5161,-0.1233 21.29946,-0.43794 5.13402,-0.27456 10.39747,0.12196 14.88609,0.44938 4.16702,0.31881 9.0649,0.58405 13.82126,0.37091 3.77649,-0.0899 7.38185,-0.30347 10.55618,-0.6028"
       id="path4873"
       inkscape:connector-curvature="0" />
    <path
       style="fill:none;stroke:#ffaaaa;stroke-width:7.05555487;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       d="m 24.376791,125.46968 c 16.139571,0.3964 33.41041,1.30296 48.941493,-0.0847 10.211618,-0.86335 21.492741,-0.97231 31.225906,0.12613 12.26479,0.64162 25.07783,0.22214 37.59653,0.34164 4.54837,-0.37207 9.61418,-0.22628 14.42008,-0.25537"
       id="path4729"
       inkscape:connector-curvature="0" />
    <path
       inkscape:connector-curvature="0"
       id="path8698"
       d="m 247.14412,226.87407 h 29.13294"
       style="fill:none;stroke:#000000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker8702)" />
    <text
       id="text4502"
       y="102.91856"
       x="8.1297483"
       style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:7.01581287px;line-height:1.25;font-family:Arial;-inkscape-font-specification:Arial;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.07055556;stroke-miterlimit:4;stroke-dasharray:none"
       xml:space="preserve"
       transform="scale(1.0000222,0.99997781)"><tspan
         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:10.52371979px;font-family:HGMaruGothicMPRO;-inkscape-font-specification:HGMaruGothicMPRO;stroke:#000000;stroke-width:0.07055556;stroke-miterlimit:4;stroke-dasharray:none"
         y="102.91856"
         x="8.1297483"
         id="tspan4500"
         sodipodi:role="line">趣旨説明</tspan></text>
    <text
       xml:space="preserve"
       style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:7.01581287px;line-height:1.25;font-family:HGMaruGothicMPRO;-inkscape-font-specification:HGMaruGothicMPRO;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.07055556;stroke-miterlimit:4;stroke-dasharray:none"
       x="36.782169"
       y="170.60524"
       id="text4532"
       transform="scale(1.0000222,0.99997781)"><tspan
         sodipodi:role="line"
         id="tspan4530"
         x="36.782169"
         y="170.60524"
         style="stroke-width:0.07055556">事業報告書</tspan></text>
    <g
       transform="matrix(0.05407536,0,0,-0.05407298,148.79923,295.25281)"
       inkscape:label="ink_ext_XXXXXX"
       id="g4577"
       style="stroke-width:6.52396059">
      <g
         transform="scale(0.1)"
         id="g4575"
         style="stroke-width:6.52396059">
        <path
           inkscape:connector-curvature="0"
           id="path4573"
           style="fill:#231f20;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:6.52396059"
           d="M 4877.0996,1121.4978 H 1932.8391 c -23.4661,0 -42.5399,19.1952 -42.5399,42.6613 v 3931.4158 c 0,23.5753 19.0738,42.6492 42.5399,42.6492 h 2366.3795 c 0,-0.1092 0,-0.1092 0,-0.1092 v -475.6323 c 0,-79.8625 64.817,-144.7887 144.6796,-144.7887 h 475.6201 c 0.1213,0 0.1213,0 0.1213,0 V 1164.1591 c 0,-23.4661 -19.0738,-42.6613 -42.54,-42.6613 z m 216.9587,3573.6967 -617.3391,617.3391 c -19.1951,19.1951 -45.0273,29.8605 -72.2791,29.8605 h -2471.601 c -136.1497,0 -246.8191,-110.6816 -246.8191,-246.8192 V 1164.1591 c 0,-136.0284 110.6694,-246.81911 246.8191,-246.81911 h 2944.2605 c 136.1498,0 246.8192,110.79071 246.8192,246.81911 v 3458.8655 c 0,27.1426 -10.7867,53.0839 -29.8605,72.1699" />
      </g>
    </g>
    <g
       id="g4958"
       transform="matrix(0.22758656,0,0,0.22757647,20.233294,158.23052)"
       style="stroke-width:1.16258717">
      <g
         transform="matrix(0.23760354,0,0,-0.23760354,38.99953,602.09344)"
         inkscape:label="ink_ext_XXXXXX"
         id="g4552"
         style="stroke-width:6.52396059">
        <g
           transform="scale(0.1)"
           id="g4554"
           style="stroke-width:6.52396059">
          <path
             inkscape:connector-curvature="0"
             id="path4556"
             style="fill:#231f20;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:6.52396059"
             d="M 4877.0996,1121.4978 H 1932.8391 c -23.4661,0 -42.5399,19.1952 -42.5399,42.6613 v 3931.4158 c 0,23.5753 19.0738,42.6492 42.5399,42.6492 h 2366.3795 c 0,-0.1092 0,-0.1092 0,-0.1092 v -475.6323 c 0,-79.8625 64.817,-144.7887 144.6796,-144.7887 h 475.6201 c 0.1213,0 0.1213,0 0.1213,0 V 1164.1591 c 0,-23.4661 -19.0738,-42.6613 -42.54,-42.6613 z m 216.9587,3573.6967 -617.3391,617.3391 c -19.1951,19.1951 -45.0273,29.8605 -72.2791,29.8605 h -2471.601 c -136.1497,0 -246.8191,-110.6816 -246.8191,-246.8192 V 1164.1591 c 0,-136.0284 110.6694,-246.81911 246.8191,-246.81911 h 2944.2605 c 136.1498,0 246.8192,110.79071 246.8192,246.81911 v 3458.8655 c 0,27.1426 -10.7867,53.0839 -29.8605,72.1699" />
        </g>
      </g>
      <circle
         style="opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:2.32517433;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
         id="path4597"
         cx="97.779617"
         cy="501.60889"
         r="5.524272" />
      <circle
         style="opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:2.32517433;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
         id="circle4623"
         cx="97.779617"
         cy="519.65741"
         r="5.524272" />
      <circle
         style="opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:2.32517433;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
         id="circle4629"
         cx="97.779617"
         cy="537.70599"
         r="5.524272" />
      <circle
         r="5.524272"
         cy="555.75452"
         cx="97.779617"
         id="circle4617"
         style="opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:2.32517433;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" />
      <circle
         style="opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:2.32517433;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
         id="circle4625"
         cx="115.82816"
         cy="519.65741"
         r="5.524272" />
      <circle
         style="opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:2.32517433;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
         id="circle4631"
         cx="115.82816"
         cy="537.70599"
         r="5.524272" />
      <circle
         r="5.524272"
         cy="555.75452"
         cx="115.82816"
         id="circle4619"
         style="opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:2.32517433;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" />
      <circle
         style="opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:2.32517433;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
         id="circle4627"
         cx="133.87671"
         cy="519.65741"
         r="5.524272" />
      <circle
         style="opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:2.32517433;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
         id="circle4633"
         cx="133.87671"
         cy="537.70599"
         r="5.524272" />
    </g>
    <g
       id="g4976"
       transform="matrix(0.22758656,0,0,0.22757647,20.233294,158.23052)"
       style="stroke-width:1.16258717">
      <g
         transform="matrix(0.23760354,0,0,-0.23760354,170.47717,602.09344)"
         inkscape:label="ink_ext_XXXXXX"
         id="g4583"
         style="stroke-width:6.52396059">
        <g
           transform="scale(0.1)"
           id="g4581"
           style="stroke-width:6.52396059">
          <path
             inkscape:connector-curvature="0"
             id="path4579"
             style="fill:#231f20;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:6.52396059"
             d="M 4877.0996,1121.4978 H 1932.8391 c -23.4661,0 -42.5399,19.1952 -42.5399,42.6613 v 3931.4158 c 0,23.5753 19.0738,42.6492 42.5399,42.6492 h 2366.3795 c 0,-0.1092 0,-0.1092 0,-0.1092 v -475.6323 c 0,-79.8625 64.817,-144.7887 144.6796,-144.7887 h 475.6201 c 0.1213,0 0.1213,0 0.1213,0 V 1164.1591 c 0,-23.4661 -19.0738,-42.6613 -42.54,-42.6613 z m 216.9587,3573.6967 -617.3391,617.3391 c -19.1951,19.1951 -45.0273,29.8605 -72.2791,29.8605 h -2471.601 c -136.1497,0 -246.8191,-110.6816 -246.8191,-246.8192 V 1164.1591 c 0,-136.0284 110.6694,-246.81911 246.8191,-246.81911 h 2944.2605 c 136.1498,0 246.8192,110.79071 246.8192,246.81911 v 3458.8655 c 0,27.1426 -10.7867,53.0839 -29.8605,72.1699" />
        </g>
      </g>
      <rect
         style="opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:2.32517433;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
         id="rect4635"
         width="10.943867"
         height="10.943867"
         x="236.68221"
         y="547.91266" />
      <rect
         y="547.91266"
         x="219.60977"
         height="10.943867"
         width="10.943867"
         id="rect4637"
         style="opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:2.32517433;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" />
      <rect
         style="opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:2.32517433;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
         id="rect4639"
         width="10.943867"
         height="10.943867"
         x="270.82706"
         y="530.84021" />
      <rect
         y="530.84021"
         x="253.75464"
         height="10.943867"
         width="10.943867"
         id="rect4641"
         style="opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:2.32517433;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" />
      <rect
         style="opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:2.32517433;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
         id="rect4643"
         width="10.943867"
         height="10.943867"
         x="236.68221"
         y="530.84021" />
      <rect
         y="530.84021"
         x="219.60977"
         height="10.943867"
         width="10.943867"
         id="rect4645"
         style="opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:2.32517433;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" />
      <rect
         y="513.76782"
         x="253.75464"
         height="10.943867"
         width="10.943867"
         id="rect4649"
         style="opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:2.32517433;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" />
      <rect
         style="opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:2.32517433;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
         id="rect4651"
         width="10.943867"
         height="10.943867"
         x="236.68221"
         y="513.76782" />
      <rect
         y="513.76782"
         x="219.60977"
         height="10.943867"
         width="10.943867"
         id="rect4653"
         style="opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:2.32517433;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" />
      <rect
         style="opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:2.32517433;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
         id="rect4655"
         width="10.943867"
         height="10.943867"
         x="270.82706"
         y="496.69537" />
      <rect
         y="496.69537"
         x="253.75464"
         height="10.943867"
         width="10.943867"
         id="rect4657"
         style="opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:2.32517433;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" />
      <rect
         style="opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:2.32517433;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
         id="rect4659"
         width="10.943867"
         height="10.943867"
         x="236.68221"
         y="496.69537" />
      <rect
         y="496.69537"
         x="219.60977"
         height="10.943867"
         width="10.943867"
         id="rect4661"
         style="opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:2.32517433;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" />
    </g>
    <g
       id="g4830">
      <g
         transform="matrix(0.05407537,0,0,-0.05407297,88.954155,295.25282)"
         inkscape:label="ink_ext_XXXXXX"
         id="g4589"
         style="stroke-width:6.52396059">
        <g
           transform="scale(0.1)"
           id="g4587"
           style="stroke-width:6.52396059">
          <path
             inkscape:connector-curvature="0"
             id="path4585"
             style="fill:#231f20;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:6.52396059"
             d="M 4877.0996,1121.4978 H 1932.8391 c -23.4661,0 -42.5399,19.1952 -42.5399,42.6613 v 3931.4158 c 0,23.5753 19.0738,42.6492 42.5399,42.6492 h 2366.3795 c 0,-0.1092 0,-0.1092 0,-0.1092 v -475.6323 c 0,-79.8625 64.817,-144.7887 144.6796,-144.7887 h 475.6201 c 0.1213,0 0.1213,0 0.1213,0 V 1164.1591 c 0,-23.4661 -19.0738,-42.6613 -42.54,-42.6613 z m 216.9587,3573.6967 -617.3391,617.3391 c -19.1951,19.1951 -45.0273,29.8605 -72.2791,29.8605 h -2471.601 c -136.1497,0 -246.8191,-110.6816 -246.8191,-246.8192 V 1164.1591 c 0,-136.0284 110.6694,-246.81911 246.8191,-246.81911 h 2944.2605 c 136.1498,0 246.8192,110.79071 246.8192,246.81911 v 3458.8655 c 0,27.1426 -10.7867,53.0839 -29.8605,72.1699" />
        </g>
      </g>
      <path
         inkscape:connector-curvature="0"
         d="m 106.51513,287.72652 h 1.64361 l -0.82181,-1.31638 z"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         inkscape:label="Triangle"
         id="path4724" />
      <path
         id="path4806"
         inkscape:label="Triangle"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         d="m 103.32323,287.72652 h 1.6436 l -0.8218,-1.31638 z"
         inkscape:connector-curvature="0" />
      <path
         inkscape:connector-curvature="0"
         d="m 100.13133,287.72652 h 1.6436 l -0.8218,-1.31638 z"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         inkscape:label="Triangle"
         id="path4808" />
      <path
         inkscape:connector-curvature="0"
         d="m 112.89894,284.9436 h 1.6436 l -0.8218,-1.31638 z"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         inkscape:label="Triangle"
         id="path4812" />
      <path
         id="path4814"
         inkscape:label="Triangle"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         d="m 103.32323,279.37775 h 1.6436 l -0.8218,-1.31638 z"
         inkscape:connector-curvature="0" />
      <path
         inkscape:connector-curvature="0"
         d="m 100.13133,279.37775 h 1.6436 l -0.8218,-1.31638 z"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         inkscape:label="Triangle"
         id="path4816" />
      <path
         inkscape:connector-curvature="0"
         d="m 112.89894,276.59482 h 1.6436 l -0.8218,-1.31638 z"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         inkscape:label="Triangle"
         id="path4820" />
      <path
         id="path4822"
         inkscape:label="Triangle"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         d="m 109.70703,276.59482 h 1.64361 l -0.8218,-1.31638 z"
         inkscape:connector-curvature="0" />
      <path
         inkscape:connector-curvature="0"
         d="m 106.51513,276.59482 h 1.64361 l -0.82181,-1.31638 z"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         inkscape:label="Triangle"
         id="path4824" />
      <path
         id="path4826"
         inkscape:label="Triangle"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         d="m 100.13133,271.02897 h 1.6436 l -0.8218,-1.31638 z"
         inkscape:connector-curvature="0" />
      <path
         inkscape:connector-curvature="0"
         d="m 103.32323,276.59482 h 1.6436 l -0.8218,-1.31638 z"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         inkscape:label="Triangle"
         id="path4828" />
      <path
         inkscape:connector-curvature="0"
         d="m 112.89894,273.81189 h 1.6436 l -0.8218,-1.31637 z"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         inkscape:label="Triangle"
         id="path4832" />
      <path
         id="path4834"
         inkscape:label="Triangle"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         d="m 109.70703,273.81189 h 1.64361 l -0.8218,-1.31637 z"
         inkscape:connector-curvature="0" />
      <path
         inkscape:connector-curvature="0"
         d="m 106.51513,273.81189 h 1.64361 l -0.82181,-1.31637 z"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         inkscape:label="Triangle"
         id="path4836" />
      <path
         id="path4838"
         inkscape:label="Triangle"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         d="m 103.32323,273.81189 h 1.6436 l -0.8218,-1.31637 z"
         inkscape:connector-curvature="0" />
      <path
         inkscape:connector-curvature="0"
         d="m 100.13133,273.81189 h 1.6436 l -0.8218,-1.31637 z"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         inkscape:label="Triangle"
         id="path4840" />
      <path
         id="path4846"
         inkscape:label="Triangle"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         d="m 109.70703,271.02897 h 1.64361 l -0.8218,-1.31638 z"
         inkscape:connector-curvature="0" />
      <path
         inkscape:connector-curvature="0"
         d="m 106.51513,271.02897 h 1.64361 l -0.82181,-1.31638 z"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         inkscape:label="Triangle"
         id="path4848" />
      <path
         id="path4850"
         inkscape:label="Triangle"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         d="m 103.32323,271.02897 h 1.6436 l -0.8218,-1.31638 z"
         inkscape:connector-curvature="0" />
      <path
         inkscape:connector-curvature="0"
         d="m 100.13133,276.59482 h 1.6436 l -0.8218,-1.31638 z"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         inkscape:label="Triangle"
         id="path4852" />
      <path
         id="path4854"
         inkscape:label="Triangle"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         d="m 106.51513,284.9436 h 1.64361 l -0.82181,-1.31638 z"
         inkscape:connector-curvature="0" />
      <path
         inkscape:connector-curvature="0"
         d="m 103.32323,284.9436 h 1.6436 l -0.8218,-1.31638 z"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         inkscape:label="Triangle"
         id="path4856" />
      <path
         id="path4858"
         inkscape:label="Triangle"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         d="m 100.13133,284.9436 h 1.6436 l -0.8218,-1.31638 z"
         inkscape:connector-curvature="0" />
      <path
         inkscape:connector-curvature="0"
         d="m 106.51513,279.37775 h 1.64361 l -0.82181,-1.31638 z"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         inkscape:label="Triangle"
         id="path4860" />
      <path
         inkscape:connector-curvature="0"
         d="m 112.89894,282.16067 h 1.6436 l -0.8218,-1.31638 z"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         inkscape:label="Triangle"
         id="path4864" />
      <path
         id="path4866"
         inkscape:label="Triangle"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         d="m 109.70703,282.16067 h 1.64361 l -0.8218,-1.31638 z"
         inkscape:connector-curvature="0" />
      <path
         inkscape:connector-curvature="0"
         d="m 106.51513,282.16067 h 1.64361 l -0.82181,-1.31638 z"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         inkscape:label="Triangle"
         id="path4868" />
      <path
         id="path4870"
         inkscape:label="Triangle"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         d="m 103.32323,282.16067 h 1.6436 l -0.8218,-1.31638 z"
         inkscape:connector-curvature="0" />
      <path
         inkscape:connector-curvature="0"
         d="m 100.13133,282.16067 h 1.6436 l -0.8218,-1.31638 z"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         inkscape:label="Triangle"
         id="path4872" />
      <path
         inkscape:connector-curvature="0"
         d="m 112.89894,279.37775 h 1.6436 l -0.8218,-1.31638 z"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         inkscape:label="Triangle"
         id="path4876" />
      <path
         id="path4878"
         inkscape:label="Triangle"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         d="m 109.70703,279.37775 h 1.64361 l -0.8218,-1.31638 z"
         inkscape:connector-curvature="0" />
      <path
         inkscape:connector-curvature="0"
         d="m 109.70703,284.9436 h 1.64361 l -0.8218,-1.31638 z"
         style="fill:none;stroke:#000000;stroke-width:0.39687502;stroke-miterlimit:4;stroke-dasharray:none"
         inkscape:label="Triangle"
         id="path4880" />
    </g>
    <g
       id="g5048"
       transform="matrix(0.22758656,0,0,0.22757647,20.233294,158.23052)"
       style="stroke-width:1.16258717">
      <g
         transform="matrix(0.23760354,0,0,-0.23760354,433.43249,602.09344)"
         inkscape:label="ink_ext_XXXXXX"
         id="g4595"
         style="stroke-width:6.52396059">
        <g
           transform="scale(0.1)"
           id="g4593"
           style="stroke-width:6.52396059">
          <path
             inkscape:connector-curvature="0"
             id="path4591"
             style="fill:#231f20;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:6.52396059"
             d="M 4877.0996,1121.4978 H 1932.8391 c -23.4661,0 -42.5399,19.1952 -42.5399,42.6613 v 3931.4158 c 0,23.5753 19.0738,42.6492 42.5399,42.6492 h 2366.3795 c 0,-0.1092 0,-0.1092 0,-0.1092 v -475.6323 c 0,-79.8625 64.817,-144.7887 144.6796,-144.7887 h 475.6201 c 0.1213,0 0.1213,0 0.1213,0 V 1164.1591 c 0,-23.4661 -19.0738,-42.6613 -42.54,-42.6613 z m 216.9587,3573.6967 -617.3391,617.3391 c -19.1951,19.1951 -45.0273,29.8605 -72.2791,29.8605 h -2471.601 c -136.1497,0 -246.8191,-110.6816 -246.8191,-246.8192 V 1164.1591 c 0,-136.0284 110.6694,-246.81911 246.8191,-246.81911 h 2944.2605 c 136.1498,0 246.8192,110.79071 246.8192,246.81911 v 3458.8655 c 0,27.1426 -10.7867,53.0839 -29.8605,72.1699" />
        </g>
      </g>
      <g
         transform="matrix(0.49253741,0,0,0.49253741,288.52608,356.57518)"
         style="stroke-width:4.72080708;stroke-miterlimit:4;stroke-dasharray:none"
         id="g4890">
        <path
           style="fill:none;stroke:#000000;stroke-width:4.72080708;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
           d="m 399.21875,393.01794 26.17188,26.17188"
           id="path4884"
           inkscape:connector-curvature="0" />
        <path
           inkscape:connector-curvature="0"
           id="path4886"
           d="m 399.21875,419.18982 26.17188,-26.17188"
           style="fill:none;stroke:#000000;stroke-width:4.72080708;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
      </g>
      <g
         id="g4896"
         style="stroke-width:4.72080708;stroke-miterlimit:4;stroke-dasharray:none"
         transform="matrix(0.49253741,0,0,0.49253741,327.13577,337.27034)">
        <path
           inkscape:connector-curvature="0"
           id="path4892"
           d="m 399.21875,393.01794 26.17188,26.17188"
           style="fill:none;stroke:#000000;stroke-width:4.72080708;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
        <path
           style="fill:none;stroke:#000000;stroke-width:4.72080708;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
           d="m 399.21875,419.18982 26.17188,-26.17188"
           id="path4894"
           inkscape:connector-curvature="0" />
      </g>
      <g
         transform="matrix(0.49253741,0,0,0.49253741,307.83092,337.27034)"
         style="stroke-width:4.72080708;stroke-miterlimit:4;stroke-dasharray:none"
         id="g4902">
        <path
           style="fill:none;stroke:#000000;stroke-width:4.72080708;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
           d="m 399.21875,393.01794 26.17188,26.17188"
           id="path4898"
           inkscape:connector-curvature="0" />
        <path
           inkscape:connector-curvature="0"
           id="path4900"
           d="m 399.21875,419.18982 26.17188,-26.17188"
           style="fill:none;stroke:#000000;stroke-width:4.72080708;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
      </g>
      <g
         id="g4908"
         style="stroke-width:4.72080708;stroke-miterlimit:4;stroke-dasharray:none"
         transform="matrix(0.49253741,0,0,0.49253741,288.52608,337.27034)">
        <path
           inkscape:connector-curvature="0"
           id="path4904"
           d="m 399.21875,393.01794 26.17188,26.17188"
           style="fill:none;stroke:#000000;stroke-width:4.72080708;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
        <path
           style="fill:none;stroke:#000000;stroke-width:4.72080708;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
           d="m 399.21875,419.18982 26.17188,-26.17188"
           id="path4906"
           inkscape:connector-curvature="0" />
      </g>
      <g
         transform="matrix(0.49253741,0,0,0.49253741,327.13577,317.96549)"
         style="stroke-width:4.72080708;stroke-miterlimit:4;stroke-dasharray:none"
         id="g4914">
        <path
           style="fill:none;stroke:#000000;stroke-width:4.72080708;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
           d="m 399.21875,393.01794 26.17188,26.17188"
           id="path4910"
           inkscape:connector-curvature="0" />
        <path
           inkscape:connector-curvature="0"
           id="path4912"
           d="m 399.21875,419.18982 26.17188,-26.17188"
           style="fill:none;stroke:#000000;stroke-width:4.72080708;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
      </g>
      <g
         id="g4920"
         style="stroke-width:4.72080708;stroke-miterlimit:4;stroke-dasharray:none"
         transform="matrix(0.49253741,0,0,0.49253741,307.83092,317.96549)">
        <path
           inkscape:connector-curvature="0"
           id="path4916"
           d="m 399.21875,393.01794 26.17188,26.17188"
           style="fill:none;stroke:#000000;stroke-width:4.72080708;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
        <path
           style="fill:none;stroke:#000000;stroke-width:4.72080708;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
           d="m 399.21875,419.18982 26.17188,-26.17188"
           id="path4918"
           inkscape:connector-curvature="0" />
      </g>
      <g
         transform="matrix(0.49253741,0,0,0.49253741,288.52608,317.96549)"
         style="stroke-width:4.72080708;stroke-miterlimit:4;stroke-dasharray:none"
         id="g4926">
        <path
           style="fill:none;stroke:#000000;stroke-width:4.72080708;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
           d="m 399.21875,393.01794 26.17188,26.17188"
           id="path4922"
           inkscape:connector-curvature="0" />
        <path
           inkscape:connector-curvature="0"
           id="path4924"
           d="m 399.21875,419.18982 26.17188,-26.17188"
           style="fill:none;stroke:#000000;stroke-width:4.72080708;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
      </g>
      <g
         id="g4932"
         style="stroke-width:4.72080708;stroke-miterlimit:4;stroke-dasharray:none"
         transform="matrix(0.49253741,0,0,0.49253741,327.13577,298.66065)">
        <path
           inkscape:connector-curvature="0"
           id="path4928"
           d="m 399.21875,393.01794 26.17188,26.17188"
           style="fill:none;stroke:#000000;stroke-width:4.72080708;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
        <path
           style="fill:none;stroke:#000000;stroke-width:4.72080708;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
           d="m 399.21875,419.18982 26.17188,-26.17188"
           id="path4930"
           inkscape:connector-curvature="0" />
      </g>
      <g
         transform="matrix(0.49253741,0,0,0.49253741,307.83092,298.66065)"
         style="stroke-width:4.72080708;stroke-miterlimit:4;stroke-dasharray:none"
         id="g4938">
        <path
           style="fill:none;stroke:#000000;stroke-width:4.72080708;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
           d="m 399.21875,393.01794 26.17188,26.17188"
           id="path4934"
           inkscape:connector-curvature="0" />
        <path
           inkscape:connector-curvature="0"
           id="path4936"
           d="m 399.21875,419.18982 26.17188,-26.17188"
           style="fill:none;stroke:#000000;stroke-width:4.72080708;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
      </g>
      <g
         id="g4944"
         style="stroke-width:4.72080708;stroke-miterlimit:4;stroke-dasharray:none"
         transform="matrix(0.49253741,0,0,0.49253741,288.52608,298.66065)">
        <path
           inkscape:connector-curvature="0"
           id="path4940"
           d="m 399.21875,393.01794 26.17188,26.17188"
           style="fill:none;stroke:#000000;stroke-width:4.72080708;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
        <path
           style="fill:none;stroke:#000000;stroke-width:4.72080708;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
           d="m 399.21875,419.18982 26.17188,-26.17188"
           id="path4942"
           inkscape:connector-curvature="0" />
      </g>
    </g>
    <path
       style="fill:none;stroke:#000000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       d="m 136.94195,264.46457 v -7.29173"
       id="path5068"
       inkscape:connector-curvature="0" />
    <path
       inkscape:connector-curvature="0"
       id="path5070"
       d="m 106.67219,264.46457 v -7.29173"
       style="fill:none;stroke:#000000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
    <path
       style="fill:none;stroke:#000000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       d="m 76.402415,264.46457 v -7.29173"
       id="path5072"
       inkscape:connector-curvature="0" />
    <path
       inkscape:connector-curvature="0"
       id="path5074"
       d="m 46.132642,264.46457 v -7.29173"
       style="fill:none;stroke:#000000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
    <path
       style="fill:none;stroke:#000000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       d="m 167.21173,264.46457 v -7.29173"
       id="path5076"
       inkscape:connector-curvature="0" />
    <path
       style="fill:none;stroke:#000000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       d="M 45.95267,257.40041 H 167.33153"
       id="path5078"
       inkscape:connector-curvature="0" />
    <rect
       style="opacity:1;fill:url(#linearGradient5066);fill-opacity:1;stroke:none;stroke-width:0.39687499;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
       id="rect5050"
       width="41.992153"
       height="39.978783"
       x="136.4032"
       y="251.89262" />
    <path
       style="fill:none;stroke:#000000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#Arrow1Mend)"
       d="M 87.863293,257.42427 V 244.60089"
       id="path5080"
       inkscape:connector-curvature="0" />
    <g
       id="g8221"
       transform="translate(-34.017857,2.4065592)">
      <circle
         transform="matrix(0.27661576,0,0,0.2070074,-37.605127,149.68971)"
         r="109.375"
         cy="300.04919"
         cx="576.5625"
         id="path5782"
         style="opacity:1;fill:#aaccff;fill-opacity:1;stroke:none;stroke-width:0.29484913;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;filter:url(#filter6516)" />
      <g
         style="stroke-width:6.91187763"
         id="g5366"
         inkscape:label="ink_ext_XXXXXX"
         transform="matrix(0.05104049,0,0,-0.05103822,85.416836,227.68759)">
        <g
           style="stroke-width:6.91187763"
           id="g5368"
           transform="scale(0.1)">
          <path
             d="m 1705.51,3589.51 h 1023.93 c 46.58,0 84.18,37.7 84.18,84.18 0,46.48 -37.6,84.18 -84.18,84.18 H 1705.51 c -46.58,0 -84.18,-37.7 -84.18,-84.18 0,-46.48 37.6,-84.18 84.18,-84.18"
             style="fill:#231f20;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:6.91187763"
             id="path5370"
             inkscape:connector-curvature="0" />
          <path
             d="m 1705.51,2967.64 h 1683.21 c 46.58,0 84.18,37.69 84.18,84.18 0,46.48 -37.6,84.18 -84.18,84.18 H 1705.51 c -46.58,0 -84.18,-37.7 -84.18,-84.18 0,-46.49 37.6,-84.18 84.18,-84.18"
             style="fill:#231f20;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:6.91187763"
             id="path5372"
             inkscape:connector-curvature="0" />
          <path
             d="m 1705.51,2345.76 h 1683.21 c 46.58,0 84.18,37.7 84.18,84.18 0,46.48 -37.6,84.18 -84.18,84.18 H 1705.51 c -46.58,0 -84.18,-37.7 -84.18,-84.18 0,-46.48 37.6,-84.18 84.18,-84.18"
             style="fill:#231f20;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:6.91187763"
             id="path5374"
             inkscape:connector-curvature="0" />
          <path
             d="m 3472.9,1808.07 c 0,46.48 -37.6,84.18 -84.18,84.18 H 1705.51 c -46.58,0 -84.18,-37.7 -84.18,-84.18 0,-46.49 37.6,-84.18 84.18,-84.18 h 1683.21 c 46.58,0 84.18,37.69 84.18,84.18"
             style="fill:#231f20;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:6.91187763"
             id="path5376"
             inkscape:connector-curvature="0" />
          <path
             d="m 3795.45,1120.76 c 0,-19.34 -15.72,-35.16 -35.05,-35.16 H 1333.83 c -19.33,0 -35.06,15.82 -35.06,35.16 V 4360.9 c 0,19.43 15.73,35.15 35.06,35.15 h 1950.3 c 0,-0.09 0,-0.09 0,-0.09 v -392 c 0,-65.82 53.41,-119.33 119.23,-119.33 h 392 c 0.09,0 0.09,0 0.09,0 V 1905.72 l -390.13,-390.23 179.2,-179.1 210.93,210.93 z m 631.16,1416.02 -462.8,-462.8 v 1897.46 c 0,22.37 -8.88,43.75 -24.61,59.48 l -508.79,508.79 c -15.82,15.82 -37.1,24.61 -59.57,24.61 H 1333.83 c -112.2,0 -203.42,-91.22 -203.42,-203.42 V 1120.76 c 0,-112.11 91.22,-203.42 203.42,-203.42 H 3760.4 c 112.2,0 203.41,91.31 203.41,203.42 v 594.92 l 642,641.9 -179.2,179.2"
             style="fill:#231f20;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:6.91187763"
             id="path5378"
             inkscape:connector-curvature="0" />
          <path
             d="m 4543.99,2654.16 -89.55,-89.45 179.2,-179.3 89.45,89.65 -179.1,179.1"
             style="fill:#231f20;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:6.91187763"
             id="path5380"
             inkscape:connector-curvature="0" />
          <path
             d="m 3482.66,1327.6 -116.21,-31.06 31.15,116.12 z m -169.92,-84.77 243.36,65.04 -178.22,178.22 -65.14,-243.26"
             style="fill:#231f20;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:6.91187763"
             id="path5382"
             inkscape:connector-curvature="0" />
        </g>
      </g>
      <g
         style="stroke-width:6.02521229"
         id="g5461"
         inkscape:label="ink_ext_XXXXXX"
         transform="matrix(-0.05855156,0,0,-0.05854897,145.23458,229.80846)">
        <g
           style="stroke-width:6.02521229"
           id="g5463"
           transform="scale(0.1)">
          <path
             d="m 2497.54,4130.65 c 279.38,0 505.87,226.49 505.87,505.88 0,279.38 -226.49,505.87 -505.87,505.87 -279.39,0 -505.86,-226.49 -505.86,-505.87 0,-279.39 226.47,-505.88 505.86,-505.88"
             style="fill:#231f20;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:6.02521229"
             id="path5465"
             inkscape:connector-curvature="0" />
          <path
             d="m 2466.55,3388.34 195.28,-45.41 40.48,-9.41 c 31.66,-7.35 65.94,-4.37 97.5,10.83 l 680.15,327.44 c 53.53,25.76 84.51,85.73 71.24,146.29 -15.53,70.77 -85.48,115.56 -156.24,100.04 l -644.7,-141.35 -358.43,149.51 c -64.68,54.93 -144.88,87.13 -228.78,92.56 -4.47,1.3 -8.71,3.2 -13.11,4.22 -121.59,28.28 -242.07,-30.17 -299.79,-134.15 -14.43,-17.36 -27.5,-35.11 -38.1,-53.58 -30.16,-52.55 -41.16,-110.57 -57.33,-167.17 l -92.06,-341.34 c -29.95,-114.18 -56.22,-229.81 -83.64,-346.36 -13.3,-58.21 -27.28,-117.5 -38.66,-178.13 l -17.56,-95.78 -8.83,-55.65 -2.42,-16.59 -3.22,-29.58 c -1.82,-19.76 -2.97,-39.59 -3.46,-59.26 l -0.2,-7.82 c -0.16,-7.53 -0.07,-15.12 0.27,-22.75 8.41,-186.45 166.39,-330.78 352.85,-322.36 81.25,3.67 162.5,8 243.75,14.12 81.24,6.02 162.5,10.1 243.75,17.71 43.25,3.67 86.51,7.94 129.77,11.89 l -137.11,-536.33 c -36.92,-144.47 50.25,-291.53 194.72,-328.46 144.46,-36.93 291.52,50.24 328.46,194.72 l 233.24,912.38 c 2.44,9.65 4.46,19.78 5.85,29.87 20.13,146.49 -82.32,281.58 -228.82,301.7 l -38.62,5.31 c -162.5,22.32 -325,37.28 -487.49,51.07 -10.71,1.01 -21.42,1.6 -32.12,2.5 l 76.99,256.81 76.39,262.51"
             style="fill:#231f20;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:6.02521229"
             id="path5467"
             inkscape:connector-curvature="0" />
          <path
             d="m 1144.95,4673.36 c 66.73,9.99 109.28,75.37 279.47,140.19 -193.76,53.46 -257.95,59.73 -324.68,49.74 -66.73,-10 -110.709,-60.6 -98.23,-113.06 12.49,-52.44 76.71,-86.86 143.44,-76.87"
             style="fill:#231f20;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:6.02521229"
             id="path5469"
             inkscape:connector-curvature="0" />
          <path
             d="m 1168.07,4519.82 c -200.968,-3.51 -264.312,-15.63 -325.504,-44.08 -61.183,-28.44 -89.054,-89.43 -62.253,-136.21 26.8,-46.78 98.136,-61.63 159.32,-33.19 61.177,28.46 83.517,103.2 228.437,213.48"
             style="fill:#231f20;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:6.02521229"
             id="path5471"
             inkscape:connector-curvature="0" />
          <path
             d="m 1251.58,4258.93 c 26.79,-47.71 95.81,-60.93 154.14,-29.54 58.34,31.41 78.28,109.64 215.56,228.53 -193.49,-9.82 -254.25,-24.34 -312.59,-55.74 -58.33,-31.4 -83.9,-95.53 -57.11,-143.25"
             style="fill:#231f20;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:6.02521229"
             id="path5473"
             inkscape:connector-curvature="0" />
          <path
             d="m 1983.74,1820.3 v -658.4 h 270 v 928.4 h -928.65 v 1242.85 h -270 V 1161.9 h 270 v 658.4 h 658.65"
             style="fill:#231f20;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:6.02521229"
             id="path5475"
             inkscape:connector-curvature="0" />
          <path
             d="m 4961.74,1161.9 v 1857.76 h 483.75 v 270 h -2610 v -270 h 472.5 V 1161.9 h 270 V 3019.66 H 4691.74 V 1161.9 h 270"
             style="fill:#231f20;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:6.02521229"
             id="path5477"
             inkscape:connector-curvature="0" />
          <path
             d="m 3994.33,3381.93 h 1245.01 v 217.5 H 3994.33 Z"
             style="fill:#231f20;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:6.02521229"
             id="path5479"
             inkscape:connector-curvature="0" />
          <path
             d="m 4204.2,3653.86 h 1245 v 217.5 h -1245 z"
             style="fill:#231f20;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:6.02521229"
             id="path5481"
             inkscape:connector-curvature="0" />
          <path
             d="m 3941.7,3953.86 h 1244.99 v 217.5 H 3941.7 Z"
             style="fill:#231f20;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:6.02521229"
             id="path5483"
             inkscape:connector-curvature="0" />
        </g>
      </g>
    </g>
    <text
       xml:space="preserve"
       style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:7.01581287px;line-height:1.25;font-family:HGMaruGothicMPRO;-inkscape-font-specification:HGMaruGothicMPRO;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.07055556;stroke-miterlimit:4;stroke-dasharray:none"
       x="118.58101"
       y="229.408"
       id="text5503"
       transform="scale(1.0000222,0.99997781)"><tspan
         sodipodi:role="line"
         x="118.58101"
         y="229.408"
         id="tspan5505"
         style="stroke-width:0.07055556">負担が大きい</tspan></text>
    <g
       id="g5085">
      <text
         transform="scale(1.0000222,0.99997783)"
         xml:space="preserve"
         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:9.3544178px;line-height:1.25;font-family:HGMaruGothicMPRO;-inkscape-font-specification:HGMaruGothicMPRO;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.07055555;stroke-miterlimit:4;stroke-dasharray:none"
         x="24.90135"
         y="128.29543"
         id="text4518"><tspan
           sodipodi:role="line"
           x="24.90135"
           y="128.29543"
           id="tspan4520"
           style="stroke-width:0.07055555">目的：　　　で文章を編集する</tspan></text>
      <g
         id="g5189"
         transform="matrix(0.02056774,0,0,0.02034823,55.769294,118.93391)"
         style="display:inline;stroke:#000000;stroke-width:25.86639023;stroke-miterlimit:4;stroke-dasharray:none">
        <path
           id="path5172"
           d="M 364.09,23.89 H 14.82 L 4.61,157.66 H 15.48 C 23.3,57.47 31.89,39.93 125.69,39.93 c 10.87,0 28.53,0 33.39,0 11.55,1.81 11.55,9.16 11.55,23.08 v 329.26 c 0,21.86 -1.83,28.53 -52.78,28.53 h -17.17 v 14.61 c 29.02,-0.56 59.26,-1.15 88.93,-1.15 29.58,0 59.91,0.59 88.91,1.15 V 420.8 h -16.88 c -50.19,0 -52,-6.67 -52,-28.53 V 63.02 c 0,-13.36 0,-20.61 10.89,-23.08 h 33.19 c 92.55,0 101.61,17.44 109.42,117.73 h 10.89"
           inkscape:connector-curvature="0"
           style="stroke:#000000;stroke-width:25.86639023;stroke-miterlimit:4;stroke-dasharray:none" />
        <path
           id="path5174"
           d="m 667.6,414.32 h -10.87 c -13.26,89.69 -21.08,138.44 -127.47,138.44 h -83.95 c -24.16,0 -25.3,-3.05 -25.3,-23.86 V 359.83 h 57.06 c 57.06,0 62.5,20.91 62.5,71.96 h 9.72 V 274.44 h -9.72 c 0,50.19 -5.45,70.71 -62.5,70.71 H 420 v -149.9 c 0,-20.42 1.15,-23.47 25.3,-23.47 H 528 c 93.6,0 104.49,37.2 112.97,117.17 h 10.9 L 637.36,155.17 H 331.1 v 16.61 c 42.84,0 49.7,0 49.7,27.19 v 326.42 c 0,27.19 -6.77,27.19 -49.7,27.19 v 14.61 h 314.76"
           inkscape:connector-curvature="0"
           style="stroke:#000000;stroke-width:25.86639023;stroke-miterlimit:4;stroke-dasharray:none" />
        <path
           id="path5176"
           d="M 830.66,206.51 920.15,77.13 c 8.96,-12.7 27.19,-38.84 76.82,-39.5 v -14.6 c -13.85,1.15 -36.83,1.15 -51.34,1.15 -19.93,0 -44.75,0 -59.82,-1.15 v 14.61 c 19.37,1.81 24.13,13.92 24.13,23.67 0,7.23 -2.96,12.11 -7.25,18.12 L 822.84,195.25 733.35,64.26 c -4.2,-6.59 -4.79,-8.5 -4.79,-10.31 0,-5.45 6.59,-15.75 26.62,-16.32 v -14.6 c -19.37,1.15 -48.95,1.15 -68.88,1.15 -15.66,0 -45.89,0 -60.5,-1.15 v 14.61 c 33.22,0 44.09,1.25 57.45,20.03 L 799.93,229.04 694.71,382.75 C 668.75,420.34 629.45,421 617.89,421 v 14.61 c 13.82,-1.15 36.83,-1.15 51.34,-1.15 16.32,0 44.75,0 59.82,1.15 V 421 c -18.71,-1.81 -24.13,-13.92 -24.13,-23.67 0,-7.82 2.96,-12.11 6.01,-16.41 l 96.75,-141.2 105.22,154.66 c 4.76,6.69 4.76,8.5 4.76,10.31 0,4.76 -5.42,15.17 -26.6,16.41 v 14.61 c 19.37,-1.15 48.95,-1.15 68.88,-1.15 15.66,0 45.89,0 60.57,1.15 V 421.1 c -38.74,0 -44.84,-2.96 -56.86,-20.03"
           inkscape:connector-curvature="0"
           style="stroke:#000000;stroke-width:25.86639023;stroke-miterlimit:4;stroke-dasharray:none" />
      </g>
    </g>
    <path
       style="fill:none;stroke:#000000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       d="m 162.31915,124.76463 h 36.1478"
       id="path5547"
       inkscape:connector-curvature="0" />
    <path
       inkscape:connector-curvature="0"
       id="path5549"
       d="m 198.05156,116.0887 h 8.90697"
       style="fill:none;stroke:#000000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
    <path
       inkscape:connector-curvature="0"
       id="path5551"
       d="M 198.34389,115.79638 V 161.5146"
       style="fill:none;stroke:#000000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
    <path
       style="fill:none;stroke:#000000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       d="m 198.05156,161.17757 h 8.90697"
       id="path5553"
       inkscape:connector-curvature="0" />
    <text
       xml:space="preserve"
       style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:9.3544178px;line-height:1.25;font-family:HGMaruGothicMPRO;-inkscape-font-specification:HGMaruGothicMPRO;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.07055556;stroke-miterlimit:4;stroke-dasharray:none"
       x="211.99199"
       y="119.12186"
       id="text5561"
       transform="scale(1.0000222,0.99997781)"><tspan
         sodipodi:role="line"
         id="tspan5559"
         x="211.99199"
         y="119.12186"
         style="stroke-width:0.07055556">論理展開の構成</tspan></text>
    <text
       id="text5565"
       y="164.50635"
       x="211.99199"
       style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:9.3544178px;line-height:1.25;font-family:HGMaruGothicMPRO;-inkscape-font-specification:HGMaruGothicMPRO;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.07055556;stroke-miterlimit:4;stroke-dasharray:none"
       xml:space="preserve"
       transform="scale(1.0000222,0.99997781)"><tspan
         y="164.50635"
         x="211.99199"
         id="tspan5563"
         sodipodi:role="line"
         style="stroke-width:0.07055556">体裁の統一</tspan></text>
    <g
       transform="matrix(0.05078725,0,0,-0.050785,71.609163,173.41706)"
       inkscape:label="ink_ext_XXXXXX"
       id="g5577"
       style="stroke-width:6.94634151">
      <g
         transform="scale(0.1)"
         id="g5579"
         style="stroke-width:6.94634151">
        <path
           inkscape:connector-curvature="0"
           id="path5581"
           style="fill:#211a19;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:6.94634151"
           d="m 4418.29,4732.74 c 41.93,4.82 76.81,6.12 103.25,6.12 2.14,0 4.18,0 6.31,0 5.1,-0.18 10.21,-0.18 15.4,-0.18 l 14.48,-67.91 31.63,-148.44 9,-41.56 8.82,-41.57 462.01,-2163.66 c -7.05,0.19 -13.92,0.19 -20.97,0.19 -750.44,0 -1209.49,-596.15 -1573.07,-1132.21 l -144.91,678.73 -330.09,1545.98 -14.75,68.65 -14.66,68.65 -2.96,14.48 -8.35,39.33 -0.29,1.11 c 8.82,15.22 17.73,29.51 26.73,44.35 544.4,914.56 1149.83,1096.39 1432.42,1127.94 z M 1613.84,3969.4 c 525.65,0 921.05,-134.89 1177.56,-399.86 9.66,-10.02 19.5,-20.03 28.77,-30.23 l 1.12,-5.2 8.35,-39.15 3.15,-14.48 14.65,-68.65 14.67,-68.83 382.69,-1792.21 80.33,-376.47 c -279.05,219.51 -666.48,330.65 -1155.11,330.65 -190.29,0 -391.14,-16.7 -612.31,-51.03 l -422.77,1979.6 -15.22,71.43 -15.3,71.62 -7.14,33.6 -8.82,41 -8.73,41.19 -40.9,191.3 -7.98,37.29 c 210.88,32.66 402.27,48.43 582.99,48.43 z m -708.41,-260.88 18.355,42.12 9.563,-44.71 8.718,-41.2 8.813,-41.01 5.098,-23.93 22.179,-103.91 c 0,-0.18 0.09,-0.18 0.09,-0.18 L 1434.41,1359.31 c 7.89,-36.73 43.23,-60.85 80.26,-54.55 239.82,40.45 454.21,59.93 655.35,59.93 553.94,0 963.73,-149.18 1218.02,-443.081 0.84,-1.488 1.76,-2.027 2.51,-2.781 1.39,-1.308 2.77,-2.609 4.16,-3.719 3.44,-2.961 7.15,-5.75 11.14,-7.98 1.31,-0.918 2.69,-1.668 4.08,-2.59 5.48,-2.789 11.23,-4.828 17.36,-5.937 0.18,0 0.36,-0.192 0.55,-0.192 4.45,-0.738 8.91,-1.289 13.27,-1.289 0.18,0 0.55,0 0.74,0 5.47,0 10.85,0.918 15.96,2.031 0.37,0 0.83,0.368 1.28,0.368 8.68,2.23 16.71,6.402 23.95,11.878 3.98,2.883 6.86,6.684 10.16,10.391 1.93,2.231 4.5,3.813 6.17,6.313 1.76,2.597 3.43,5.007 5.01,7.429 455.97,680.399 860.38,1199.919 1543.84,1199.919 33.86,0 68.56,-1.3 103.26,-3.89 1.95,0 3.89,0 5.75,-0.19 37.2,0.38 70.51,31.56 70.51,70.14 0,9.09 -1.68,18 -4.74,25.61 l -489,2289.83 -8.91,41.56 -8.53,40.26 28.94,-27.46 30.06,-28.94 59.19,-56.22 535.21,-2506 C 4766.65,1906.3 3876.22,1374.71 3674.99,858.891 l -377.78,-68.84 C 3059.9,954.262 2413.46,1098.8 1900.79,1098.8 c -220.53,0 -402.55,-25.23 -542.54,-75.33 l -533.824,2499.69 47.129,107.8 16.972,38.78 z m 4201.33,1068.94 c -2.78,12.62 -11.5,23.56 -23.47,28.57 -11.97,5.19 -25.7,4.08 -36.93,-2.79 l -207.35,-127.28 -190.09,181.1 c -0.37,0.37 -0.92,0.37 -1.29,0.74 -6.31,5.75 -13.27,10.38 -20.79,13.17 -1.67,0.74 -3.62,0.74 -5.38,1.3 -5.29,1.85 -10.48,3.52 -16.14,3.89 -1.49,0.19 -2.87,0 -4.27,0.19 0,0 -0.09,0 -0.18,0 -26.54,1.86 -52.97,2.6 -79.33,2.6 -222.84,0 -987.85,-87.76 -1649.69,-1191.21 -283.61,279.81 -706.01,421.75 -1258.01,421.75 -209.02,0 -431.02,-20.04 -678.641,-61.79 -0.742,0 -1.39,-0.55 -2.133,-0.55 -1.3,-0.37 -2.687,-0.93 -4.078,-1.3 -5.293,-1.31 -10.304,-3.34 -15.133,-5.76 -1.109,-0.55 -2.32,-0.91 -3.328,-1.85 -5.289,-3.16 -10.211,-7.24 -14.48,-11.88 -1.02,-0.92 -1.953,-2.04 -2.871,-3.33 -1.399,-1.87 -3.071,-3.16 -4.36,-5.2 -2.136,-2.97 -3.808,-6.68 -5.39,-9.83 -0.27,-0.56 -0.641,-0.92 -0.828,-1.3 L 758.367,3722.08 502.785,3746 c -12.898,1.12 -25.238,-3.71 -33.777,-13.17 -8.43,-9.83 -11.969,-22.64 -9.18,-35.07 L 1078.45,800.262 c 3.7,-17.082 18.09,-30.063 35.53,-31.543 L 3274.86,567.398 c 1.2,0 2.5,0 3.8,0 2.31,0 4.81,0.18 7.24,0.551 l 498,90.551 c 4.83,0.75 9.47,2.781 13.73,5.191 L 5707.19,1837.47 c 14.47,8.9 21.8,25.97 18.28,42.67 l -618.71,2897.32" />
      </g>
    </g>
    <path
       inkscape:connector-curvature="0"
       id="path5592"
       d="m 87.863293,185.20688 v -9.63754"
       style="fill:none;stroke:#000000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker5596)" />
    <text
       transform="scale(1.0000222,0.99997781)"
       id="text8351"
       y="135.24385"
       x="227.81372"
       style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:7.01581287px;line-height:1.25;font-family:HGMaruGothicMPRO;-inkscape-font-specification:HGMaruGothicMPRO;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.07055556;stroke-miterlimit:4;stroke-dasharray:none"
       xml:space="preserve"><tspan
         style="stroke-width:0.07055556"
         id="tspan8349"
         y="135.24385"
         x="227.81372"
         sodipodi:role="line">人間が考えること</tspan></text>
    <text
       xml:space="preserve"
       style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:7.01581287px;line-height:1.25;font-family:HGMaruGothicMPRO;-inkscape-font-specification:HGMaruGothicMPRO;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.07055556;stroke-miterlimit:4;stroke-dasharray:none"
       x="227.81372"
       y="180.61006"
       id="text8355"
       transform="scale(1.0000222,0.99997781)"><tspan
         sodipodi:role="line"
         x="227.81372"
         y="180.61006"
         id="tspan8353"
         style="stroke-width:0.07055556">コンピューターの得意分野</tspan></text>
    <path
       style="fill:none;stroke:#000000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       d="m 236.99327,188.45659 v 26.80872"
       id="path8636"
       inkscape:connector-curvature="0" />
    <path
       style="fill:none;stroke:#000000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker8642)"
       d="M 205.5309,226.87407 H 169.30508"
       id="path8638"
       inkscape:connector-curvature="0" />
    <path
       style="opacity:1;fill:#ffffff;fill-opacity:1;stroke:#b3b3b3;stroke-width:2.43298101;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;filter:url(#filter8626)"
       d="m 737.875,500.75781 a 29.91741,30.052303 0 0 0 -26.7207,16.61524 25.517791,25.632847 0 0 0 -5.83594,-0.70899 25.517791,25.632847 0 0 0 -25.51953,25.63477 25.517791,25.632847 0 0 0 0.80078,6.27344 25.517791,25.632847 0 0 0 -7.83789,18.47656 25.517791,25.632847 0 0 0 25.07422,25.61133 46.635965,40.659001 0 0 0 40.91797,21.23242 46.635965,40.659001 0 0 0 20.26171,-4.07422 46.635965,40.659001 0 0 0 20.2168,4.07422 46.635965,40.659001 0 0 0 28.95703,-8.83985 32.324877,32.324877 0 0 0 22.15625,8.8418 32.324877,32.324877 0 0 0 20.98242,-7.78515 24.243656,24.243656 0 0 0 14.37305,4.7539 24.243656,24.243656 0 0 0 24.24219,-24.24414 24.243656,24.243656 0 0 0 -0.0684,-1.78516 27.779194,27.779194 0 0 0 12.19141,-22.96289 27.779194,27.779194 0 0 0 -24.91407,-27.62695 27.779194,27.779194 0 0 0 -26.09961,-18.33594 27.779194,27.779194 0 0 0 -18.16601,6.8086 20.20305,20.20305 0 0 0 -19.71484,-15.89844 20.20305,20.20305 0 0 0 -13.84376,5.50586 29.91741,30.052303 0 0 0 -15.69726,-4.4961 29.91741,30.052303 0 0 0 -20.00391,7.75391 29.91741,30.052303 0 0 0 -25.75195,-14.82422 z"
       transform="matrix(0.28965953,0,0,0.29033354,1.4213171,65.02284)"
       id="path8527"
       inkscape:connector-curvature="0" />
    <text
       transform="scale(1.0000222,0.99997781)"
       id="text8397"
       y="226.81685"
       x="203.46437"
       style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:7.01581287px;line-height:1.25;font-family:HGMaruGothicMPRO;-inkscape-font-specification:HGMaruGothicMPRO;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.07055556;stroke-miterlimit:4;stroke-dasharray:none"
       xml:space="preserve"><tspan
         style="stroke-width:0.07055556"
         id="tspan8395"
         y="226.81685"
         x="203.46437"
         sodipodi:role="line">何をどう</tspan><tspan
         style="stroke-width:0.07055556"
         y="235.58661"
         x="203.46437"
         sodipodi:role="line"
         id="tspan8525">　　使うか次第</tspan></text>
    <text
       transform="scale(1.0000222,0.99997781)"
       id="text9022"
       y="229.408"
       x="281.24228"
       style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:7.01581287px;line-height:1.25;font-family:HGMaruGothicMPRO;-inkscape-font-specification:HGMaruGothicMPRO;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.07055556;stroke-miterlimit:4;stroke-dasharray:none"
       xml:space="preserve"><tspan
         style="stroke-width:0.07055556"
         id="tspan9020"
         y="229.408"
         x="281.24228"
         sodipodi:role="line">軽く</tspan></text>
    <text
       xml:space="preserve"
       style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:5.64444447px;line-height:1.25;font-family:HGMaruGothicMPRO;-inkscape-font-specification:HGMaruGothicMPRO;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.07055556;stroke-miterlimit:4;stroke-dasharray:none"
       x="27.12347"
       y="253.39642"
       id="text9026"><tspan
         sodipodi:role="line"
         id="tspan9024"
         x="27.12347"
         y="253.39642"
         style="stroke:#000000;stroke-width:0.07055556;stroke-miterlimit:4;stroke-dasharray:none">独自スタイル</tspan></text>
    <g
       transform="matrix(0.05678694,0,0,-0.05678694,289.60239,147.53349)"
       inkscape:label="ink_ext_XXXXXX"
       id="g4743"
       style="stroke-width:6.21230412">
      <g
         transform="scale(0.1)"
         id="g4745"
         style="stroke-width:6.21230412">
        <path
           inkscape:connector-curvature="0"
           id="path4747"
           style="fill:#231f20;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:6.21230412"
           d="m 3228.77,4652.48 c -74.45,-86.25 -60.7,-258.35 -37.28,-415.28 26,-174.78 107.43,-630.15 108.23,-634.77 4.25,-23.74 24.82,-41.03 48.88,-41.03 24.06,0 44.63,17.29 48.92,41.03 0.76,4.62 82.18,459.99 108.23,634.77 25.25,169.5 41.85,328.81 -31.84,414.1 -58.82,68.43 -184.08,72.08 -245.14,1.18" />
        <path
           inkscape:connector-curvature="0"
           id="path4749"
           style="fill:#231f20;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:6.21230412"
           d="m 3349.99,3457.63 c -80.08,0 -145.29,-65.2 -145.29,-145.33 0,-80.15 65.21,-145.46 145.29,-145.46 80.14,0 145.4,65.31 145.4,145.46 0,80.13 -65.26,145.33 -145.4,145.33" />
        <path
           inkscape:connector-curvature="0"
           id="path4751"
           style="fill:#231f20;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:6.21230412"
           d="m 3349.99,2871.33 c -549.68,0 -995.42,445.57 -995.42,995.36 0,549.78 445.74,995.48 995.42,995.48 549.68,0 995.43,-445.7 995.43,-995.48 0,-549.79 -445.75,-995.36 -995.43,-995.36 z m 1524.69,1285.29 c -96.14,844.88 -891.11,1223.01 -1636.25,1223.01 -41.4,0 -82.65,-1.18 -127.87,-3.88 C 2312.13,5296.91 1850.7,4820.18 1701.02,3918.9 l -510.26,-484.47 c -23.09,-21.92 -34.38,-53.72 -30.13,-85.3 4.3,-31.58 23.42,-59.19 51.4,-74.33 l 396.39,-213.02 c 7.36,-83.79 20.08,-253.73 18.63,-399.4 82.61,-13.31 277.96,-21.15 450.86,155.34 23.03,23.63 60.74,23.85 84.37,0.86 23.47,-22.99 23.9,-60.7 0.87,-84.33 -158.89,-162.1 -334.73,-197.22 -457.14,-197.22 -32.44,0 -59.45,2.79 -83.15,6.01 -3.97,-115.16 5.16,-380.92 156.63,-542.48 89.8,-95.72 211.24,-139 363.13,-121.71 229.89,25.99 423.57,44.05 536.64,53.92 v -879.46 c 0,-43.18 27.87,-81.31 68.9,-94.63 10.04,-3.121 20.31,-4.731 30.51,-4.731 31.31,0 61.61,14.723 80.62,41.25 4.24,5.901 438.5,597.911 1183.31,710.061 27.87,4.08 52.52,19.87 68.04,43.29 15.53,23.41 20.47,52.31 13.49,79.6 -0.75,2.9 -70.63,278.43 -80.25,458.15 71.06,76.38 269.15,291.33 505.53,561.39 282.41,322.8 388.76,750.99 325.27,1308.93" />
      </g>
    </g>
    <path
       inkscape:connector-curvature="0"
       d="m 233.95229,123.40858 h 5.40768 l -2.70383,2.4189 z"
       style="fill:#999999;stroke:#000000;stroke-width:0.39687499;stroke-miterlimit:4;stroke-dasharray:none"
       inkscape:label="Triangle"
       id="path4793" />
    <path
       id="path4833"
       inkscape:label="Triangle"
       style="fill:#999999;stroke:#000000;stroke-width:0.39687499;stroke-miterlimit:4;stroke-dasharray:none"
       d="m 233.95229,168.84914 h 5.40768 l -2.70383,2.4189 z"
       inkscape:connector-curvature="0" />
    <g
       id="g8503">
      <g
         style="stroke-width:5.15870571"
         id="g4851"
         inkscape:label="ink_ext_XXXXXX"
         transform="matrix(0.06838494,0,0,-0.06838494,282.55689,218.04649)">
        <g
           style="stroke-width:5.15870571"
           id="g4853"
           transform="scale(0.1)">
          <path
             d="M 1670.91,2430.14 V 3934.09 H 3952.4 V 2430.14 Z m 1729.14,-225.59 h 777.93 V 4159.69 H 1445.32 V 2204.55 h 777.93 v -139.06 h -531.84 v -273.14 h 2240.48 v 273.14 h -531.84 v 139.06"
             style="fill:#231f20;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:5.15870571"
             id="path4855"
             inkscape:connector-curvature="0" />
          <path
             d="m 3767.48,4617.88 v -350.43 h 518.27 v -8.74 h 696.97 v -161.62 h -696.97 v -125.73 h 696.97 V 3809.72 H 4285.75 V 2096.78 h -246.1 V 1792.35 H 5300 V 4617.88 H 3767.48"
             style="fill:#231f20;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:5.15870571"
             id="path4857"
             inkscape:connector-curvature="0" />
        </g>
      </g>
      <g
         transform="matrix(0.05678694,0,0,-0.05678694,262.00339,218.78782)"
         inkscape:label="ink_ext_XXXXXX"
         id="g4871"
         style="stroke-width:6.21230412">
        <g
           transform="scale(0.1)"
           id="g4869"
           style="stroke-width:6.21230412">
          <path
             inkscape:connector-curvature="0"
             id="path4863"
             style="fill:#231f20;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:6.21230412"
             d="m 6884.0515,4652.48 c -74.45,-86.25 -60.7,-258.35 -37.28,-415.28 26,-174.78 107.43,-630.15 108.23,-634.77 4.25,-23.74 24.82,-41.03 48.88,-41.03 24.06,0 44.63,17.29 48.92,41.03 0.76,4.62 82.18,459.99 108.23,634.77 25.25,169.5 41.85,328.81 -31.84,414.1 -58.82,68.43 -184.08,72.08 -245.14,1.18" />
          <path
             inkscape:connector-curvature="0"
             id="path4865"
             style="fill:#231f20;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:6.21230412"
             d="m 7005.2715,3457.63 c -80.08,0 -145.29,-65.2 -145.29,-145.33 0,-80.15 65.21,-145.46 145.29,-145.46 80.14,0 145.4,65.31 145.4,145.46 0,80.13 -65.26,145.33 -145.4,145.33" />
        </g>
      </g>
    </g>
    <g
       id="g5257"
       transform="translate(40.050098)">
      <circle
         r="21.63011"
         cy="269.18985"
         cx="246.5146"
         id="path5092"
         style="opacity:1;fill:#ffd5d5;fill-opacity:1;stroke:none;stroke-width:1.05833328;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;filter:url(#filter5160)" />
      <g
         id="g5206"
         transform="matrix(0.02680418,0,0,0.02665882,236.52414,269.16519)"
         style="display:inline;fill:#333333;stroke:#333333;stroke-width:19.79569435;stroke-miterlimit:4;stroke-dasharray:none;filter:url(#filter5236)">
        <path
           id="path5200"
           d="M 364.09,23.89 H 14.82 L 4.61,157.66 H 15.48 C 23.3,57.47 31.89,39.93 125.69,39.93 c 10.87,0 28.53,0 33.39,0 11.55,1.81 11.55,9.16 11.55,23.08 v 329.26 c 0,21.86 -1.83,28.53 -52.78,28.53 h -17.17 v 14.61 c 29.02,-0.56 59.26,-1.15 88.93,-1.15 29.58,0 59.91,0.59 88.91,1.15 V 420.8 h -16.88 c -50.19,0 -52,-6.67 -52,-28.53 V 63.02 c 0,-13.36 0,-20.61 10.89,-23.08 h 33.19 c 92.55,0 101.61,17.44 109.42,117.73 h 10.89"
           inkscape:connector-curvature="0"
           style="fill:#333333;stroke:#333333;stroke-width:19.79569435;stroke-miterlimit:4;stroke-dasharray:none" />
        <path
           id="path5202"
           d="m 667.6,414.32 h -10.87 c -13.26,89.69 -21.08,138.44 -127.47,138.44 h -83.95 c -24.16,0 -25.3,-3.05 -25.3,-23.86 V 359.83 h 57.06 c 57.06,0 62.5,20.91 62.5,71.96 h 9.72 V 274.44 h -9.72 c 0,50.19 -5.45,70.71 -62.5,70.71 H 420 v -149.9 c 0,-20.42 1.15,-23.47 25.3,-23.47 H 528 c 93.6,0 104.49,37.2 112.97,117.17 h 10.9 L 637.36,155.17 H 331.1 v 16.61 c 42.84,0 49.7,0 49.7,27.19 v 326.42 c 0,27.19 -6.77,27.19 -49.7,27.19 v 14.61 h 314.76"
           inkscape:connector-curvature="0"
           style="fill:#333333;stroke:#333333;stroke-width:19.79569435;stroke-miterlimit:4;stroke-dasharray:none" />
        <path
           id="path5204"
           d="M 830.66,206.51 920.15,77.13 c 8.96,-12.7 27.19,-38.84 76.82,-39.5 v -14.6 c -13.85,1.15 -36.83,1.15 -51.34,1.15 -19.93,0 -44.75,0 -59.82,-1.15 v 14.61 c 19.37,1.81 24.13,13.92 24.13,23.67 0,7.23 -2.96,12.11 -7.25,18.12 L 822.84,195.25 733.35,64.26 c -4.2,-6.59 -4.79,-8.5 -4.79,-10.31 0,-5.45 6.59,-15.75 26.62,-16.32 v -14.6 c -19.37,1.15 -48.95,1.15 -68.88,1.15 -15.66,0 -45.89,0 -60.5,-1.15 v 14.61 c 33.22,0 44.09,1.25 57.45,20.03 L 799.93,229.04 694.71,382.75 C 668.75,420.34 629.45,421 617.89,421 v 14.61 c 13.82,-1.15 36.83,-1.15 51.34,-1.15 16.32,0 44.75,0 59.82,1.15 V 421 c -18.71,-1.81 -24.13,-13.92 -24.13,-23.67 0,-7.82 2.96,-12.11 6.01,-16.41 l 96.75,-141.2 105.22,154.66 c 4.76,6.69 4.76,8.5 4.76,10.31 0,4.76 -5.42,15.17 -26.6,16.41 v 14.61 c 19.37,-1.15 48.95,-1.15 68.88,-1.15 15.66,0 45.89,0 60.57,1.15 V 421.1 c -38.74,0 -44.84,-2.96 -56.86,-20.03"
           inkscape:connector-curvature="0"
           style="fill:#333333;stroke:#333333;stroke-width:19.79569435;stroke-miterlimit:4;stroke-dasharray:none" />
      </g>
      <g
         style="display:inline;fill:#d40000;stroke:#d40000;stroke-width:19.79569435;stroke-miterlimit:4;stroke-dasharray:none"
         transform="matrix(0.02680418,0,0,0.02665882,235.8233,268.46435)"
         id="g5077">
        <path
           style="fill:#d40000;stroke:#d40000;stroke-width:19.79569435;stroke-miterlimit:4;stroke-dasharray:none"
           inkscape:connector-curvature="0"
           d="M 364.09,23.89 H 14.82 L 4.61,157.66 H 15.48 C 23.3,57.47 31.89,39.93 125.69,39.93 c 10.87,0 28.53,0 33.39,0 11.55,1.81 11.55,9.16 11.55,23.08 v 329.26 c 0,21.86 -1.83,28.53 -52.78,28.53 h -17.17 v 14.61 c 29.02,-0.56 59.26,-1.15 88.93,-1.15 29.58,0 59.91,0.59 88.91,1.15 V 420.8 h -16.88 c -50.19,0 -52,-6.67 -52,-28.53 V 63.02 c 0,-13.36 0,-20.61 10.89,-23.08 h 33.19 c 92.55,0 101.61,17.44 109.42,117.73 h 10.89"
           id="path5071" />
        <path
           style="fill:#d40000;stroke:#d40000;stroke-width:19.79569435;stroke-miterlimit:4;stroke-dasharray:none"
           inkscape:connector-curvature="0"
           d="m 667.6,414.32 h -10.87 c -13.26,89.69 -21.08,138.44 -127.47,138.44 h -83.95 c -24.16,0 -25.3,-3.05 -25.3,-23.86 V 359.83 h 57.06 c 57.06,0 62.5,20.91 62.5,71.96 h 9.72 V 274.44 h -9.72 c 0,50.19 -5.45,70.71 -62.5,70.71 H 420 v -149.9 c 0,-20.42 1.15,-23.47 25.3,-23.47 H 528 c 93.6,0 104.49,37.2 112.97,117.17 h 10.9 L 637.36,155.17 H 331.1 v 16.61 c 42.84,0 49.7,0 49.7,27.19 v 326.42 c 0,27.19 -6.77,27.19 -49.7,27.19 v 14.61 h 314.76"
           id="path5073" />
        <path
           style="fill:#d40000;stroke:#d40000;stroke-width:19.79569435;stroke-miterlimit:4;stroke-dasharray:none"
           inkscape:connector-curvature="0"
           d="M 830.66,206.51 920.15,77.13 c 8.96,-12.7 27.19,-38.84 76.82,-39.5 v -14.6 c -13.85,1.15 -36.83,1.15 -51.34,1.15 -19.93,0 -44.75,0 -59.82,-1.15 v 14.61 c 19.37,1.81 24.13,13.92 24.13,23.67 0,7.23 -2.96,12.11 -7.25,18.12 L 822.84,195.25 733.35,64.26 c -4.2,-6.59 -4.79,-8.5 -4.79,-10.31 0,-5.45 6.59,-15.75 26.62,-16.32 v -14.6 c -19.37,1.15 -48.95,1.15 -68.88,1.15 -15.66,0 -45.89,0 -60.5,-1.15 v 14.61 c 33.22,0 44.09,1.25 57.45,20.03 L 799.93,229.04 694.71,382.75 C 668.75,420.34 629.45,421 617.89,421 v 14.61 c 13.82,-1.15 36.83,-1.15 51.34,-1.15 16.32,0 44.75,0 59.82,1.15 V 421 c -18.71,-1.81 -24.13,-13.92 -24.13,-23.67 0,-7.82 2.96,-12.11 6.01,-16.41 l 96.75,-141.2 105.22,154.66 c 4.76,6.69 4.76,8.5 4.76,10.31 0,4.76 -5.42,15.17 -26.6,16.41 v 14.61 c 19.37,-1.15 48.95,-1.15 68.88,-1.15 15.66,0 45.89,0 60.57,1.15 V 421.1 c -38.74,0 -44.84,-2.96 -56.86,-20.03"
           id="path5075" />
      </g>
      <text
         id="text5089"
         y="261.9798"
         x="205.65768"
         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:5.64444447px;line-height:1.25;font-family:HGMaruGothicMPRO;-inkscape-font-specification:HGMaruGothicMPRO;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.07055556;stroke-miterlimit:4;stroke-dasharray:none"
         xml:space="preserve"><tspan
           style="fill:#000000;stroke:#000000;stroke-width:0.07055556;stroke-miterlimit:4;stroke-dasharray:none"
           y="261.9798"
           x="205.65768"
           id="tspan5087"
           sodipodi:role="line">体裁の統一に特化</tspan></text>
    </g>
    <g
       id="g8475"
       transform="matrix(0.68234866,0,0,0.6995503,90.30712,71.147489)"
       style="stroke-width:1.44739592">
      <path
         id="path5244"
         inkscape:label="Triangle"
         style="fill:#ffd5d5;fill-opacity:1;stroke:none;stroke-width:1.0212183;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;filter:url(#filter8464)"
         d="m 284.29636,232.33764 h 8.02494 l -4.01246,3.98729 z"
         inkscape:connector-curvature="0" />
      <path
         inkscape:connector-curvature="0"
         d="m 284.29636,236.57097 h 8.02494 l -4.01246,3.98729 z"
         style="fill:#ffd5d5;fill-opacity:1;stroke:none;stroke-width:1.0212183;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;filter:url(#filter8464)"
         inkscape:label="Triangle"
         id="path8468" />
      <path
         id="path8470"
         inkscape:label="Triangle"
         style="fill:#ffd5d5;fill-opacity:1;stroke:none;stroke-width:1.0212183;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;filter:url(#filter8464)"
         d="m 284.29636,240.8043 h 8.02494 l -4.01246,3.98729 z"
         inkscape:connector-curvature="0" />
    </g>
  </g>
  <g
     inkscape:groupmode="layer"
     id="layer6"
     inkscape:label="L"
     sodipodi:insensitive="true">
    <g
       id="g8350">
      <path
         style="fill:none;stroke:#ff0000;stroke-width:0.26458332px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
         d="M -6.1035156e-7,70.044089 H 339.78"
         id="path8332"
         inkscape:connector-curvature="0" />
      <path
         inkscape:connector-curvature="0"
         id="path8334"
         d="M -6.1035156e-7,139.9559 H 339.78"
         style="fill:none;stroke:#ff0000;stroke-width:0.26458332px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
      <path
         inkscape:connector-curvature="0"
         id="path8342"
         d="M 226.4759,210 V 1e-6"
         style="fill:none;stroke:#ff0000;stroke-width:0.26458332px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
      <path
         style="fill:none;stroke:#ff0000;stroke-width:0.26458332px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
         d="M 113.3041,210 V 1e-6"
         id="path8344"
         inkscape:connector-curvature="0" />
    </g>
  </g>
  <script
     id="JessyInk"
     ns1:version="1.5.5">// Copyright 2008, 2009 Hannes Hochreiner
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see http://www.gnu.org/licenses/.

// Set onload event handler.
window.onload = jessyInkInit;

// Creating a namespace dictionary. The standard Inkscape namespaces are taken from inkex.py.
var NSS = new Object();
NSS['sodipodi']='http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd';
NSS['cc']='http://web.resource.org/cc/';
NSS['svg']='http://www.w3.org/2000/svg';
NSS['dc']='http://purl.org/dc/elements/1.1/';
NSS['rdf']='http://www.w3.org/1999/02/22-rdf-syntax-ns#';
NSS['inkscape']='http://www.inkscape.org/namespaces/inkscape';
NSS['xlink']='http://www.w3.org/1999/xlink';
NSS['xml']='http://www.w3.org/XML/1998/namespace';
NSS['jessyink']='https://launchpad.net/jessyink';

// Keycodes.
var LEFT_KEY = 37; // cursor left keycode
var UP_KEY = 38; // cursor up keycode
var RIGHT_KEY = 39; // cursor right keycode
var DOWN_KEY = 40; // cursor down keycode
var PAGE_UP_KEY = 33; // page up keycode
var PAGE_DOWN_KEY = 34; // page down keycode
var HOME_KEY = 36; // home keycode
var END_KEY = 35; // end keycode
var ENTER_KEY = 13; // next slide
var SPACE_KEY = 32;
var ESCAPE_KEY = 27;

// Presentation modes.
var SLIDE_MODE = 1;
var INDEX_MODE = 2;
var DRAWING_MODE = 3;

// Mouse handler actions.
var MOUSE_UP = 1;
var MOUSE_DOWN = 2;
var MOUSE_MOVE = 3;
var MOUSE_WHEEL = 4;

// Parameters.
var ROOT_NODE = document.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;svg&quot;)[0];
var HEIGHT = 0;
var WIDTH = 0;
var INDEX_COLUMNS_DEFAULT = 4;
var INDEX_COLUMNS = INDEX_COLUMNS_DEFAULT;
var INDEX_OFFSET = 0;
var STATE_START = -1;
var STATE_END = -2;
var BACKGROUND_COLOR = null;
var slides = new Array();

// Initialisation.
var currentMode = SLIDE_MODE;
var masterSlide = null;
var activeSlide = 0;
var activeEffect = 0;
var timeStep = 30; // 40 ms equal 25 frames per second.
var lastFrameTime = null;
var processingEffect = false;
var transCounter = 0;
var effectArray = 0;
var defaultTransitionInDict = new Object();
defaultTransitionInDict[&quot;name&quot;] = &quot;appear&quot;;
var defaultTransitionOutDict = new Object();
defaultTransitionOutDict[&quot;name&quot;] = &quot;appear&quot;;
var jessyInkInitialised = false;

// Initialise char and key code dictionaries.
var charCodeDictionary = getDefaultCharCodeDictionary();
var keyCodeDictionary = getDefaultKeyCodeDictionary();

// Initialise mouse handler dictionary.
var mouseHandlerDictionary = getDefaultMouseHandlerDictionary();

var progress_bar_visible = false;
var timer_elapsed = 0;
var timer_start = timer_elapsed;
var timer_duration = 15; // 15 minutes

var history_counter = 0;
var history_original_elements = new Array();
var history_presentation_elements = new Array();

var mouse_original_path = null;
var mouse_presentation_path = null;
var mouse_last_x = -1;
var mouse_last_y = -1;
var mouse_min_dist_sqr = 3 * 3;
var path_colour = &quot;red&quot;;
var path_width_default = 3;
var path_width = path_width_default;
var path_paint_width = path_width;

var number_of_added_slides = 0;

/** Initialisation function.
 *  The whole presentation is set-up in this function.
 */
function jessyInkInit()
{
	// Make sure we only execute this code once. Double execution can occur if the onload event handler is set
	// in the main svg tag as well (as was recommended in earlier versions). Executing this function twice does
	// not lead to any problems, but it takes more time.
	if (jessyInkInitialised)
		return;

	// Making the presentation scaleable.
	var VIEWBOX = ROOT_NODE.getAttribute(&quot;viewBox&quot;);

	if (VIEWBOX)
	{
		WIDTH = ROOT_NODE.viewBox.animVal.width;
		HEIGHT = ROOT_NODE.viewBox.animVal.height;
	}
	else
	{
		HEIGHT = parseFloat(ROOT_NODE.getAttribute(&quot;height&quot;));
		WIDTH = parseFloat(ROOT_NODE.getAttribute(&quot;width&quot;));
		ROOT_NODE.setAttribute(&quot;viewBox&quot;, &quot;0 0 &quot; + WIDTH + &quot; &quot; + HEIGHT);
	}

	ROOT_NODE.setAttribute(&quot;width&quot;, &quot;100%&quot;);
	ROOT_NODE.setAttribute(&quot;height&quot;, &quot;100%&quot;);

	// Setting the background color.
	var namedViews = document.getElementsByTagNameNS(NSS[&quot;sodipodi&quot;], &quot;namedview&quot;);

	for (var counter = 0; counter &lt; namedViews.length; counter++)
	{
		if (namedViews[counter].hasAttribute(&quot;id&quot;) &amp;&amp; namedViews[counter].hasAttribute(&quot;pagecolor&quot;))
		{
			if (namedViews[counter].getAttribute(&quot;id&quot;) == &quot;base&quot;)
			{
				BACKGROUND_COLOR = namedViews[counter].getAttribute(&quot;pagecolor&quot;);
				var newAttribute = &quot;background-color:&quot; + BACKGROUND_COLOR + &quot;;&quot;;

				if (ROOT_NODE.hasAttribute(&quot;style&quot;))
					newAttribute += ROOT_NODE.getAttribute(&quot;style&quot;);

				ROOT_NODE.setAttribute(&quot;style&quot;, newAttribute);
			}
		}
	}

	// Defining clip-path.
	var defsNodes = document.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;defs&quot;);

	if (defsNodes.length &gt; 0)
	{
		var existingClipPath = document.getElementById(&quot;jessyInkSlideClipPath&quot;);

		if (!existingClipPath)
		{
			var rectNode = document.createElementNS(NSS[&quot;svg&quot;], &quot;rect&quot;);
			var clipPath = document.createElementNS(NSS[&quot;svg&quot;], &quot;clipPath&quot;);

			rectNode.setAttribute(&quot;x&quot;, 0);
			rectNode.setAttribute(&quot;y&quot;, 0);
			rectNode.setAttribute(&quot;width&quot;, WIDTH);
			rectNode.setAttribute(&quot;height&quot;, HEIGHT);

			clipPath.setAttribute(&quot;id&quot;, &quot;jessyInkSlideClipPath&quot;);
			clipPath.setAttribute(&quot;clipPathUnits&quot;, &quot;userSpaceOnUse&quot;);

			clipPath.appendChild(rectNode);
			defsNodes[0].appendChild(clipPath);
		}
	}

	// Making a list of the slide and finding the master slide.
	var nodes = document.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;g&quot;);
	var tempSlides = new Array();
	var existingJessyInkPresentationLayer = null;

	for (var counter = 0; counter &lt; nodes.length; counter++)
	{
		if (nodes[counter].getAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;) &amp;&amp; (nodes[counter].getAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;) == &quot;layer&quot;))
		{
			if (nodes[counter].getAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;) &amp;&amp; nodes[counter].getAttributeNS(NSS[&quot;jessyink&quot;], &quot;masterSlide&quot;) == &quot;masterSlide&quot;)
				masterSlide = nodes[counter];
			else if (nodes[counter].getAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;) &amp;&amp; nodes[counter].getAttributeNS(NSS[&quot;jessyink&quot;], &quot;presentationLayer&quot;) == &quot;presentationLayer&quot;)
				existingJessyInkPresentationLayer = nodes[counter];
			else
				tempSlides.push(nodes[counter].getAttribute(&quot;id&quot;));
		}
		else if (nodes[counter].getAttributeNS(NSS['jessyink'], 'element'))
		{
			handleElement(nodes[counter]);
		}
	}

	// Hide master slide set default transitions.
	if (masterSlide)
	{
		masterSlide.style.display = &quot;none&quot;;

		if (masterSlide.hasAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionIn&quot;))
			defaultTransitionInDict = propStrToDict(masterSlide.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionIn&quot;));

		if (masterSlide.hasAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionOut&quot;))
			defaultTransitionOutDict = propStrToDict(masterSlide.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionOut&quot;));
	}

	if (existingJessyInkPresentationLayer != null)
	{
		existingJessyInkPresentationLayer.parentNode.removeChild(existingJessyInkPresentationLayer);
	}

	// Set start slide.
	var hashObj = new LocationHash(window.location.hash);

	activeSlide = hashObj.slideNumber;
	activeEffect = hashObj.effectNumber;

	if (activeSlide &lt; 0)
		activeSlide = 0;
	else if (activeSlide &gt;= tempSlides.length)
		activeSlide = tempSlides.length - 1;

	var originalNode = document.getElementById(tempSlides[counter]);

	var JessyInkPresentationLayer = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);
	JessyInkPresentationLayer.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;, &quot;layer&quot;);
	JessyInkPresentationLayer.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;, &quot;JessyInk Presentation Layer&quot;);
	JessyInkPresentationLayer.setAttributeNS(NSS[&quot;jessyink&quot;], &quot;presentationLayer&quot;, &quot;presentationLayer&quot;);
	JessyInkPresentationLayer.setAttribute(&quot;id&quot;, &quot;jessyink_presentation_layer&quot;);
	JessyInkPresentationLayer.style.display = &quot;inherit&quot;;
	ROOT_NODE.appendChild(JessyInkPresentationLayer);

	// Gathering all the information about the transitions and effects of the slides, set the background
	// from the master slide and substitute the auto-texts.
	for (var counter = 0; counter &lt; tempSlides.length; counter++)
	{
		var originalNode = document.getElementById(tempSlides[counter]);
		originalNode.style.display = &quot;none&quot;;
		var node = suffixNodeIds(originalNode.cloneNode(true), &quot;_&quot; + counter);
		JessyInkPresentationLayer.appendChild(node);
		slides[counter] = new Object();
		slides[counter][&quot;original_element&quot;] = originalNode;
		slides[counter][&quot;element&quot;] = node;

		// Set build in transition.
		slides[counter][&quot;transitionIn&quot;] = new Object();

		var dict;

		if (node.hasAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionIn&quot;))
			dict = propStrToDict(node.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionIn&quot;));
		else
			dict = defaultTransitionInDict;

		slides[counter][&quot;transitionIn&quot;][&quot;name&quot;] = dict[&quot;name&quot;];
		slides[counter][&quot;transitionIn&quot;][&quot;options&quot;] = new Object();

		for (key in dict)
			if (key != &quot;name&quot;)
				slides[counter][&quot;transitionIn&quot;][&quot;options&quot;][key] = dict[key];

		// Set build out transition.
		slides[counter][&quot;transitionOut&quot;] = new Object();

		if (node.hasAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionOut&quot;))
			dict = propStrToDict(node.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionOut&quot;));
		else
			dict = defaultTransitionOutDict;

		slides[counter][&quot;transitionOut&quot;][&quot;name&quot;] = dict[&quot;name&quot;];
		slides[counter][&quot;transitionOut&quot;][&quot;options&quot;] = new Object();

		for (key in dict)
			if (key != &quot;name&quot;)
				slides[counter][&quot;transitionOut&quot;][&quot;options&quot;][key] = dict[key];

		// Copy master slide content.
		if (masterSlide)
		{
			var clonedNode = suffixNodeIds(masterSlide.cloneNode(true), &quot;_&quot; + counter);
			clonedNode.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;);
			clonedNode.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;);
			clonedNode.style.display = &quot;inherit&quot;;

			node.insertBefore(clonedNode, node.firstChild);
		}

		// Setting clip path.
		node.setAttribute(&quot;clip-path&quot;, &quot;url(#jessyInkSlideClipPath)&quot;);

		// Substitute auto texts.
		substituteAutoTexts(node, node.getAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;), counter + 1, tempSlides.length);

		node.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;);
		node.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;);

		// Set effects.
		var tempEffects = new Array();
		var groups = new Object();

		for (var IOCounter = 0; IOCounter &lt;= 1; IOCounter++)
		{
			var propName = &quot;&quot;;
			var dir = 0;

			if (IOCounter == 0)
			{
				propName = &quot;effectIn&quot;;
				dir = 1;
			}
			else if (IOCounter == 1)
			{
				propName = &quot;effectOut&quot;;
				dir = -1;
			}

			var effects = getElementsByPropertyNS(node, NSS[&quot;jessyink&quot;], propName);

			for (var effectCounter = 0; effectCounter &lt; effects.length; effectCounter++)
			{
				var element = document.getElementById(effects[effectCounter]);
				var dict = propStrToDict(element.getAttributeNS(NSS[&quot;jessyink&quot;], propName));

				// Put every element that has an effect associated with it, into its own group.
				// Unless of course, we already put it into its own group.
				if (!(groups[element.id]))
				{
					var newGroup = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);

					element.parentNode.insertBefore(newGroup, element);
					newGroup.appendChild(element.parentNode.removeChild(element));
					groups[element.id] = newGroup;
				}

				var effectDict = new Object();

				effectDict[&quot;effect&quot;] = dict[&quot;name&quot;];
				effectDict[&quot;dir&quot;] = dir;
				effectDict[&quot;element&quot;] = groups[element.id];

				for (var option in dict)
				{
					if ((option != &quot;name&quot;) &amp;&amp; (option != &quot;order&quot;))
					{
						if (!effectDict[&quot;options&quot;])
							effectDict[&quot;options&quot;] = new Object();

						effectDict[&quot;options&quot;][option] = dict[option];
					}
				}

				if (!tempEffects[dict[&quot;order&quot;]])
					tempEffects[dict[&quot;order&quot;]] = new Array();

				tempEffects[dict[&quot;order&quot;]][tempEffects[dict[&quot;order&quot;]].length] = effectDict;
			}
		}

		// Make invisible, but keep in rendering tree to ensure that bounding box can be calculated.
		node.setAttribute(&quot;opacity&quot;,0);
		node.style.display = &quot;inherit&quot;;

		// Create a transform group.
		var transformGroup = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);

		// Add content to transform group.
		while (node.firstChild)
			transformGroup.appendChild(node.firstChild);

		// Transfer the transform attribute from the node to the transform group.
		if (node.getAttribute(&quot;transform&quot;))
		{
			transformGroup.setAttribute(&quot;transform&quot;, node.getAttribute(&quot;transform&quot;));
			node.removeAttribute(&quot;transform&quot;);
		}

		// Create a view group.
		var viewGroup = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);

		viewGroup.appendChild(transformGroup);
		slides[counter][&quot;viewGroup&quot;] = node.appendChild(viewGroup);

		// Insert background.
		if (BACKGROUND_COLOR != null)
		{
			var rectNode = document.createElementNS(NSS[&quot;svg&quot;], &quot;rect&quot;);

			rectNode.setAttribute(&quot;x&quot;, 0);
			rectNode.setAttribute(&quot;y&quot;, 0);
			rectNode.setAttribute(&quot;width&quot;, WIDTH);
			rectNode.setAttribute(&quot;height&quot;, HEIGHT);
			rectNode.setAttribute(&quot;id&quot;, &quot;jessyInkBackground&quot; + counter);
			rectNode.setAttribute(&quot;fill&quot;, BACKGROUND_COLOR);

			slides[counter][&quot;viewGroup&quot;].insertBefore(rectNode, slides[counter][&quot;viewGroup&quot;].firstChild);
		}

		// Set views.
		var tempViews = new Array();
		var views = getElementsByPropertyNS(node, NSS[&quot;jessyink&quot;], &quot;view&quot;);
		var matrixOld = (new matrixSVG()).fromElements(1, 0, 0, 0, 1, 0, 0, 0, 1);

		// Set initial view even if there are no other views.
		slides[counter][&quot;viewGroup&quot;].setAttribute(&quot;transform&quot;, matrixOld.toAttribute());
		slides[counter].initialView = matrixOld.toAttribute();

		for (var viewCounter = 0; viewCounter &lt; views.length; viewCounter++)
		{
			var element = document.getElementById(views[viewCounter]);
			var dict = propStrToDict(element.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;view&quot;));

			if (dict[&quot;order&quot;] == 0)
			{
				matrixOld = pointMatrixToTransformation(rectToMatrix(element)).mult((new matrixSVG()).fromSVGMatrix(slides[counter].viewGroup.getScreenCTM()).inv().mult((new matrixSVG()).fromSVGMatrix(element.parentNode.getScreenCTM())).inv());
				slides[counter].initialView = matrixOld.toAttribute();
			}
			else
			{
				var effectDict = new Object();

				effectDict[&quot;effect&quot;] = dict[&quot;name&quot;];
				effectDict[&quot;dir&quot;] = 1;
				effectDict[&quot;element&quot;] = slides[counter][&quot;viewGroup&quot;];
				effectDict[&quot;order&quot;] = dict[&quot;order&quot;];

				for (var option in dict)
				{
					if ((option != &quot;name&quot;) &amp;&amp; (option != &quot;order&quot;))
					{
						if (!effectDict[&quot;options&quot;])
							effectDict[&quot;options&quot;] = new Object();

						effectDict[&quot;options&quot;][option] = dict[option];
					}
				}

				effectDict[&quot;options&quot;][&quot;matrixNew&quot;] = pointMatrixToTransformation(rectToMatrix(element)).mult((new matrixSVG()).fromSVGMatrix(slides[counter].viewGroup.getScreenCTM()).inv().mult((new matrixSVG()).fromSVGMatrix(element.parentNode.getScreenCTM())).inv());

				tempViews[dict[&quot;order&quot;]] = effectDict;
			}

			// Remove element.
			element.parentNode.removeChild(element);
		}

		// Consolidate view array and append it to the effect array.
		if (tempViews.length &gt; 0)
		{
			for (var viewCounter = 0; viewCounter &lt; tempViews.length; viewCounter++)
			{
				if (tempViews[viewCounter])
				{
					tempViews[viewCounter][&quot;options&quot;][&quot;matrixOld&quot;] = matrixOld;
					matrixOld = tempViews[viewCounter][&quot;options&quot;][&quot;matrixNew&quot;];

					if (!tempEffects[tempViews[viewCounter][&quot;order&quot;]])
						tempEffects[tempViews[viewCounter][&quot;order&quot;]] = new Array();

					tempEffects[tempViews[viewCounter][&quot;order&quot;]][tempEffects[tempViews[viewCounter][&quot;order&quot;]].length] = tempViews[viewCounter];
				}
			}
		}

		// Set consolidated effect array.
		if (tempEffects.length &gt; 0)
		{
			slides[counter][&quot;effects&quot;] = new Array();

			for (var effectCounter = 0; effectCounter &lt; tempEffects.length; effectCounter++)
			{
				if (tempEffects[effectCounter])
					slides[counter][&quot;effects&quot;][slides[counter][&quot;effects&quot;].length] = tempEffects[effectCounter];
			}
		}

		node.setAttribute(&quot;onmouseover&quot;, &quot;if ((currentMode == INDEX_MODE) &amp;&amp; ( activeSlide != &quot; + counter + &quot;)) { indexSetActiveSlide(&quot; + counter + &quot;); };&quot;);

		// Set visibility for initial state.
		if (counter == activeSlide)
		{
			node.style.display = &quot;inherit&quot;;
			node.setAttribute(&quot;opacity&quot;,1);
		}
		else
		{
			node.style.display = &quot;none&quot;;
			node.setAttribute(&quot;opacity&quot;,0);
		}
	}

	// Set key handler.
	var jessyInkObjects = document.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;g&quot;);

	for (var counter = 0; counter &lt; jessyInkObjects.length; counter++)
	{
		var elem = jessyInkObjects[counter];

		if (elem.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;customKeyBindings&quot;))
		{
			if (elem.getCustomKeyBindings != undefined)
				keyCodeDictionary = elem.getCustomKeyBindings();

			if (elem.getCustomCharBindings != undefined)
				charCodeDictionary = elem.getCustomCharBindings();
		}
	}

	// Set mouse handler.
	var jessyInkMouseHandler = document.getElementsByTagNameNS(NSS[&quot;jessyink&quot;], &quot;mousehandler&quot;);

	for (var counter = 0; counter &lt; jessyInkMouseHandler.length; counter++)
	{
		var elem = jessyInkMouseHandler[counter];

		if (elem.getMouseHandler != undefined)
		{
			var tempDict = elem.getMouseHandler();

			for (mode in tempDict)
			{
				if (!mouseHandlerDictionary[mode])
					mouseHandlerDictionary[mode] = new Object();

				for (handler in tempDict[mode])
					mouseHandlerDictionary[mode][handler] = tempDict[mode][handler];
			}
		}
	}

	// Check effect number.
	if ((activeEffect &lt; 0) || (!slides[activeSlide].effects))
	{
		activeEffect = 0;
	}
	else if (activeEffect &gt; slides[activeSlide].effects.length)
	{
		activeEffect = slides[activeSlide].effects.length;
	}

	createProgressBar(JessyInkPresentationLayer);
	hideProgressBar();
	setProgressBarValue(activeSlide);
	setTimeIndicatorValue(0);
	setInterval(&quot;updateTimer()&quot;, 1000);
	setSlideToState(activeSlide, activeEffect);
	jessyInkInitialised = true;
}

/** Function to subtitute the auto-texts.
 *
 *  @param node the node
 *  @param slideName name of the slide the node is on
 *  @param slideNumber number of the slide the node is on
 *  @param numberOfSlides number of slides in the presentation
 */
function substituteAutoTexts(node, slideName, slideNumber, numberOfSlides)
{
	var texts = node.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;tspan&quot;);

	for (var textCounter = 0; textCounter &lt; texts.length; textCounter++)
	{
		if (texts[textCounter].getAttributeNS(NSS[&quot;jessyink&quot;], &quot;autoText&quot;) == &quot;slideNumber&quot;)
			texts[textCounter].firstChild.nodeValue = slideNumber;
		else if (texts[textCounter].getAttributeNS(NSS[&quot;jessyink&quot;], &quot;autoText&quot;) == &quot;numberOfSlides&quot;)
			texts[textCounter].firstChild.nodeValue = numberOfSlides;
		else if (texts[textCounter].getAttributeNS(NSS[&quot;jessyink&quot;], &quot;autoText&quot;) == &quot;slideTitle&quot;)
			texts[textCounter].firstChild.nodeValue = slideName;
	}
}

/** Convenience function to get an element depending on whether it has a property with a particular name.
 *	This function emulates some dearly missed XPath functionality.
 *
 *  @param node the node
 *  @param namespace namespace of the attribute
 *  @param name attribute name
 */
function getElementsByPropertyNS(node, namespace, name)
{
	var elems = new Array();

	if (node.getAttributeNS(namespace, name))
		elems.push(node.getAttribute(&quot;id&quot;));

	for (var counter = 0; counter &lt; node.childNodes.length; counter++)
	{
		if (node.childNodes[counter].nodeType == 1)
			elems = elems.concat(getElementsByPropertyNS(node.childNodes[counter], namespace, name));
	}

	return elems;
}

/** Function to dispatch the next effect, if there is none left, change the slide.
 *
 *  @param dir direction of the change (1 = forwards, -1 = backwards)
 */
function dispatchEffects(dir)
{
	if (slides[activeSlide][&quot;effects&quot;] &amp;&amp; (((dir == 1) &amp;&amp; (activeEffect &lt; slides[activeSlide][&quot;effects&quot;].length)) || ((dir == -1) &amp;&amp; (activeEffect &gt; 0))))
	{
		processingEffect = true;

		if (dir == 1)
		{
			effectArray = slides[activeSlide][&quot;effects&quot;][activeEffect];
			activeEffect += dir;
		}
		else if (dir == -1)
		{
			activeEffect += dir;
			effectArray = slides[activeSlide][&quot;effects&quot;][activeEffect];
		}

		transCounter = 0;
		startTime = (new Date()).getTime();
		lastFrameTime = null;
		effect(dir);
	}
	else if (((dir == 1) &amp;&amp; (activeSlide &lt; (slides.length - 1))) || (((dir == -1) &amp;&amp; (activeSlide &gt; 0))))
	{
		changeSlide(dir);
	}
}

/** Function to skip effects and directly either put the slide into start or end state or change slides.
 *
 *  @param dir direction of the change (1 = forwards, -1 = backwards)
 */
function skipEffects(dir)
{
	if (slides[activeSlide][&quot;effects&quot;] &amp;&amp; (((dir == 1) &amp;&amp; (activeEffect &lt; slides[activeSlide][&quot;effects&quot;].length)) || ((dir == -1) &amp;&amp; (activeEffect &gt; 0))))
	{
		processingEffect = true;

		if (slides[activeSlide][&quot;effects&quot;] &amp;&amp; (dir == 1))
			activeEffect = slides[activeSlide][&quot;effects&quot;].length;
		else
			activeEffect = 0;

		if (dir == 1)
			setSlideToState(activeSlide, STATE_END);
		else
			setSlideToState(activeSlide, STATE_START);

		processingEffect = false;
	}
	else if (((dir == 1) &amp;&amp; (activeSlide &lt; (slides.length - 1))) || (((dir == -1) &amp;&amp; (activeSlide &gt; 0))))
	{
		changeSlide(dir);
	}
}

/** Function to change between slides.
 *
 *  @param dir direction (1 = forwards, -1 = backwards)
 */
function changeSlide(dir)
{
	processingEffect = true;
	effectArray = new Array();

	effectArray[0] = new Object();
	if (dir == 1)
	{
		effectArray[0][&quot;effect&quot;] = slides[activeSlide][&quot;transitionOut&quot;][&quot;name&quot;];
		effectArray[0][&quot;options&quot;] = slides[activeSlide][&quot;transitionOut&quot;][&quot;options&quot;];
		effectArray[0][&quot;dir&quot;] = -1;
	}
	else if (dir == -1)
	{
		effectArray[0][&quot;effect&quot;] = slides[activeSlide][&quot;transitionIn&quot;][&quot;name&quot;];
		effectArray[0][&quot;options&quot;] = slides[activeSlide][&quot;transitionIn&quot;][&quot;options&quot;];
		effectArray[0][&quot;dir&quot;] = 1;
	}
	effectArray[0][&quot;element&quot;] = slides[activeSlide][&quot;element&quot;];

	activeSlide += dir;
	setProgressBarValue(activeSlide);

	effectArray[1] = new Object();

	if (dir == 1)
	{
		effectArray[1][&quot;effect&quot;] = slides[activeSlide][&quot;transitionIn&quot;][&quot;name&quot;];
		effectArray[1][&quot;options&quot;] = slides[activeSlide][&quot;transitionIn&quot;][&quot;options&quot;];
		effectArray[1][&quot;dir&quot;] = 1;
	}
	else if (dir == -1)
	{
		effectArray[1][&quot;effect&quot;] = slides[activeSlide][&quot;transitionOut&quot;][&quot;name&quot;];
		effectArray[1][&quot;options&quot;] = slides[activeSlide][&quot;transitionOut&quot;][&quot;options&quot;];
		effectArray[1][&quot;dir&quot;] = -1;
	}

	effectArray[1][&quot;element&quot;] = slides[activeSlide][&quot;element&quot;];

	if (slides[activeSlide][&quot;effects&quot;] &amp;&amp; (dir == -1))
		activeEffect = slides[activeSlide][&quot;effects&quot;].length;
	else
		activeEffect = 0;

	if (dir == -1)
		setSlideToState(activeSlide, STATE_END);
	else
		setSlideToState(activeSlide, STATE_START);

	transCounter = 0;
	startTime = (new Date()).getTime();
	lastFrameTime = null;
	effect(dir);
}

/** Function to toggle between index and slide mode.
*/
function toggleSlideIndex()
{
	var suspendHandle = ROOT_NODE.suspendRedraw(500);

	if (currentMode == SLIDE_MODE)
	{
		hideProgressBar();		
		INDEX_OFFSET = -1;
		indexSetPageSlide(activeSlide);
		currentMode = INDEX_MODE;
	}
	else if (currentMode == INDEX_MODE)
	{
		for (var counter = 0; counter &lt; slides.length; counter++)
		{
			slides[counter][&quot;element&quot;].setAttribute(&quot;transform&quot;,&quot;scale(1)&quot;);

			if (counter == activeSlide)
			{
				slides[counter][&quot;element&quot;].style.display = &quot;inherit&quot;;
				slides[counter][&quot;element&quot;].setAttribute(&quot;opacity&quot;,1);
				activeEffect = 0;
			}
			else
			{
				slides[counter][&quot;element&quot;].setAttribute(&quot;opacity&quot;,0);
				slides[counter][&quot;element&quot;].style.display = &quot;none&quot;;
			}
		}
		currentMode = SLIDE_MODE;
		setSlideToState(activeSlide, STATE_START);
		setProgressBarValue(activeSlide);

		if (progress_bar_visible)
		{
			showProgressBar();
		}
	}

	ROOT_NODE.unsuspendRedraw(suspendHandle);
	ROOT_NODE.forceRedraw();
}

/** Function to run an effect.
 *
 *  @param dir direction in which to play the effect (1 = forwards, -1 = backwards)
 */
function effect(dir)
{
	var done = true;

	var suspendHandle = ROOT_NODE.suspendRedraw(200);

	for (var counter = 0; counter &lt; effectArray.length; counter++)
	{
		if (effectArray[counter][&quot;effect&quot;] == &quot;fade&quot;)
			done &amp;= fade(parseInt(effectArray[counter][&quot;dir&quot;]) * dir, effectArray[counter][&quot;element&quot;], transCounter, effectArray[counter][&quot;options&quot;]);
		else if (effectArray[counter][&quot;effect&quot;] == &quot;appear&quot;)
			done &amp;= appear(parseInt(effectArray[counter][&quot;dir&quot;]) * dir, effectArray[counter][&quot;element&quot;], transCounter, effectArray[counter][&quot;options&quot;]);
		else if (effectArray[counter][&quot;effect&quot;] == &quot;pop&quot;)
			done &amp;= pop(parseInt(effectArray[counter][&quot;dir&quot;]) * dir, effectArray[counter][&quot;element&quot;], transCounter, effectArray[counter][&quot;options&quot;]);
		else if (effectArray[counter][&quot;effect&quot;] == &quot;view&quot;)
			done &amp;= view(parseInt(effectArray[counter][&quot;dir&quot;]) * dir, effectArray[counter][&quot;element&quot;], transCounter, effectArray[counter][&quot;options&quot;]);
	}

	ROOT_NODE.unsuspendRedraw(suspendHandle);
	ROOT_NODE.forceRedraw();

	if (!done)
	{
		var currentTime = (new Date()).getTime();
		var timeDiff = 1;

		transCounter = currentTime - startTime;

		if (lastFrameTime != null)
		{
			timeDiff = timeStep - (currentTime - lastFrameTime);

			if (timeDiff &lt;= 0)
				timeDiff = 1;
		}

		lastFrameTime = currentTime;

		window.setTimeout(&quot;effect(&quot; + dir + &quot;)&quot;, timeDiff);
	}
	else
	{
		window.location.hash = (activeSlide + 1) + '_' + activeEffect;
		processingEffect = false;
	}
}

/** Function to display the index sheet.
 *
 *  @param offsetNumber offset number
 */
function displayIndex(offsetNumber)
{
	var offsetX = 0;
	var offsetY = 0;

	if (offsetNumber &lt; 0)
		offsetNumber = 0;
	else if (offsetNumber &gt;= slides.length)
		offsetNumber = slides.length - 1;

	for (var counter = 0; counter &lt; slides.length; counter++)
	{
		if ((counter &lt; offsetNumber) || (counter &gt; offsetNumber + INDEX_COLUMNS * INDEX_COLUMNS - 1))
		{
			slides[counter][&quot;element&quot;].setAttribute(&quot;opacity&quot;,0);
			slides[counter][&quot;element&quot;].style.display = &quot;none&quot;;
		}
		else
		{
			offsetX = ((counter - offsetNumber) % INDEX_COLUMNS) * WIDTH;
			offsetY = Math.floor((counter - offsetNumber) / INDEX_COLUMNS) * HEIGHT;

			slides[counter][&quot;element&quot;].setAttribute(&quot;transform&quot;,&quot;scale(&quot;+1/INDEX_COLUMNS+&quot;) translate(&quot;+offsetX+&quot;,&quot;+offsetY+&quot;)&quot;);
			slides[counter][&quot;element&quot;].style.display = &quot;inherit&quot;;
			slides[counter][&quot;element&quot;].setAttribute(&quot;opacity&quot;,0.5);
		}

		setSlideToState(counter, STATE_END);
	}

	//do we need to save the current offset?
	if (INDEX_OFFSET != offsetNumber)
		INDEX_OFFSET = offsetNumber;
}

/** Function to set the active slide in the slide view.
 *
 *  @param nbr index of the active slide
 */
function slideSetActiveSlide(nbr)
{
	if (nbr &gt;= slides.length)
		nbr = slides.length - 1;
	else if (nbr &lt; 0)
		nbr = 0;

	slides[activeSlide][&quot;element&quot;].setAttribute(&quot;opacity&quot;,0);
	slides[activeSlide][&quot;element&quot;].style.display = &quot;none&quot;;

	activeSlide = parseInt(nbr);

	setSlideToState(activeSlide, STATE_START);
	slides[activeSlide][&quot;element&quot;].style.display = &quot;inherit&quot;;
	slides[activeSlide][&quot;element&quot;].setAttribute(&quot;opacity&quot;,1);

	activeEffect = 0;
	setProgressBarValue(nbr);
}

/** Function to set the active slide in the index view.
 *
 *  @param nbr index of the active slide
 */
function indexSetActiveSlide(nbr)
{
	if (nbr &gt;= slides.length)
		nbr = slides.length - 1;
	else if (nbr &lt; 0)
		nbr = 0;

	slides[activeSlide][&quot;element&quot;].setAttribute(&quot;opacity&quot;,0.5);

	activeSlide = parseInt(nbr);
	window.location.hash = (activeSlide + 1) + '_0';

	slides[activeSlide][&quot;element&quot;].setAttribute(&quot;opacity&quot;,1);
}

/** Function to set the page and active slide in index view. 
 *
 *  @param nbr index of the active slide
 *
 *  NOTE: To force a redraw,
 *  set INDEX_OFFSET to -1 before calling indexSetPageSlide().
 *
 *  This is necessary for zooming (otherwise the index might not
 *  get redrawn) and when switching to index mode.
 *
 *  INDEX_OFFSET = -1
 *  indexSetPageSlide(activeSlide);
 */
function indexSetPageSlide(nbr)
{
	if (nbr &gt;= slides.length)
		nbr = slides.length - 1;
	else if (nbr &lt; 0)
		nbr = 0;

	//calculate the offset
	var offset = nbr - nbr % (INDEX_COLUMNS * INDEX_COLUMNS);

	if (offset &lt; 0)
		offset = 0;

	//if different from kept offset, then record and change the page
	if (offset != INDEX_OFFSET)
	{
		INDEX_OFFSET = offset;
		displayIndex(INDEX_OFFSET);
	}

	//set the active slide
	indexSetActiveSlide(nbr);
}

/** Event handler for key press.
 *
 *  @param e the event
 */
function keydown(e)
{
	if (!e)
		e = window.event;

	code = e.keyCode || e.charCode;

	if (!processingEffect &amp;&amp; keyCodeDictionary[currentMode] &amp;&amp; keyCodeDictionary[currentMode][code])
		return keyCodeDictionary[currentMode][code]();
	else
		document.onkeypress = keypress;
}
// Set event handler for key down.
document.onkeydown = keydown;

/** Event handler for key press.
 *
 *  @param e the event
 */
function keypress(e)
{
	document.onkeypress = null;

	if (!e)
		e = window.event;

	str = String.fromCharCode(e.keyCode || e.charCode);

	if (!processingEffect &amp;&amp; charCodeDictionary[currentMode] &amp;&amp; charCodeDictionary[currentMode][str])
		return charCodeDictionary[currentMode][str]();
}

/** Function to supply the default char code dictionary.
 *
 * @returns default char code dictionary
 */
function getDefaultCharCodeDictionary()
{
	var charCodeDict = new Object();

	charCodeDict[SLIDE_MODE] = new Object();
	charCodeDict[INDEX_MODE] = new Object();
	charCodeDict[DRAWING_MODE] = new Object();

	charCodeDict[SLIDE_MODE][&quot;i&quot;] = function () { return toggleSlideIndex(); };
	charCodeDict[SLIDE_MODE][&quot;d&quot;] = function () { return slideSwitchToDrawingMode(); };
	charCodeDict[SLIDE_MODE][&quot;D&quot;] = function () { return slideQueryDuration(); };
	charCodeDict[SLIDE_MODE][&quot;n&quot;] = function () { return slideAddSlide(activeSlide); };
	charCodeDict[SLIDE_MODE][&quot;p&quot;] = function () { return slideToggleProgressBarVisibility(); };
	charCodeDict[SLIDE_MODE][&quot;t&quot;] = function () { return slideResetTimer(); };
	charCodeDict[SLIDE_MODE][&quot;e&quot;] = function () { return slideUpdateExportLayer(); };

	charCodeDict[DRAWING_MODE][&quot;d&quot;] = function () { return drawingSwitchToSlideMode(); };
	charCodeDict[DRAWING_MODE][&quot;0&quot;] = function () { return drawingResetPathWidth(); };
	charCodeDict[DRAWING_MODE][&quot;1&quot;] = function () { return drawingSetPathWidth(1.0); };
	charCodeDict[DRAWING_MODE][&quot;3&quot;] = function () { return drawingSetPathWidth(3.0); };
	charCodeDict[DRAWING_MODE][&quot;5&quot;] = function () { return drawingSetPathWidth(5.0); };
	charCodeDict[DRAWING_MODE][&quot;7&quot;] = function () { return drawingSetPathWidth(7.0); };
	charCodeDict[DRAWING_MODE][&quot;9&quot;] = function () { return drawingSetPathWidth(9.0); };
	charCodeDict[DRAWING_MODE][&quot;b&quot;] = function () { return drawingSetPathColour(&quot;blue&quot;); };
	charCodeDict[DRAWING_MODE][&quot;c&quot;] = function () { return drawingSetPathColour(&quot;cyan&quot;); };
	charCodeDict[DRAWING_MODE][&quot;g&quot;] = function () { return drawingSetPathColour(&quot;green&quot;); };
	charCodeDict[DRAWING_MODE][&quot;k&quot;] = function () { return drawingSetPathColour(&quot;black&quot;); };
	charCodeDict[DRAWING_MODE][&quot;m&quot;] = function () { return drawingSetPathColour(&quot;magenta&quot;); };
	charCodeDict[DRAWING_MODE][&quot;o&quot;] = function () { return drawingSetPathColour(&quot;orange&quot;); };
	charCodeDict[DRAWING_MODE][&quot;r&quot;] = function () { return drawingSetPathColour(&quot;red&quot;); };
	charCodeDict[DRAWING_MODE][&quot;w&quot;] = function () { return drawingSetPathColour(&quot;white&quot;); };
	charCodeDict[DRAWING_MODE][&quot;y&quot;] = function () { return drawingSetPathColour(&quot;yellow&quot;); };
	charCodeDict[DRAWING_MODE][&quot;z&quot;] = function () { return drawingUndo(); };

	charCodeDict[INDEX_MODE][&quot;i&quot;] = function () { return toggleSlideIndex(); };
	charCodeDict[INDEX_MODE][&quot;-&quot;] = function () { return indexDecreaseNumberOfColumns(); };
	charCodeDict[INDEX_MODE][&quot;=&quot;] = function () { return indexIncreaseNumberOfColumns(); };
	charCodeDict[INDEX_MODE][&quot;+&quot;] = function () { return indexIncreaseNumberOfColumns(); };
	charCodeDict[INDEX_MODE][&quot;0&quot;] = function () { return indexResetNumberOfColumns(); };

	return charCodeDict;
}

/** Function to supply the default key code dictionary.
 *
 * @returns default key code dictionary
 */
function getDefaultKeyCodeDictionary()
{
	var keyCodeDict = new Object();

	keyCodeDict[SLIDE_MODE] = new Object();
	keyCodeDict[INDEX_MODE] = new Object();
	keyCodeDict[DRAWING_MODE] = new Object();

	keyCodeDict[SLIDE_MODE][LEFT_KEY] = function() { return dispatchEffects(-1); };
	keyCodeDict[SLIDE_MODE][RIGHT_KEY] = function() { return dispatchEffects(1); };
	keyCodeDict[SLIDE_MODE][UP_KEY] = function() { return skipEffects(-1); };
	keyCodeDict[SLIDE_MODE][DOWN_KEY] = function() { return skipEffects(1); };
	keyCodeDict[SLIDE_MODE][PAGE_UP_KEY] = function() { return dispatchEffects(-1); };
	keyCodeDict[SLIDE_MODE][PAGE_DOWN_KEY] = function() { return dispatchEffects(1); };
	keyCodeDict[SLIDE_MODE][HOME_KEY] = function() { return slideSetActiveSlide(0); };
	keyCodeDict[SLIDE_MODE][END_KEY] = function() { return slideSetActiveSlide(slides.length - 1); };
	keyCodeDict[SLIDE_MODE][SPACE_KEY] = function() { return dispatchEffects(1); };

	keyCodeDict[INDEX_MODE][LEFT_KEY] = function() { return indexSetPageSlide(activeSlide - 1); };
	keyCodeDict[INDEX_MODE][RIGHT_KEY] = function() { return indexSetPageSlide(activeSlide + 1); };
	keyCodeDict[INDEX_MODE][UP_KEY] = function() { return indexSetPageSlide(activeSlide - INDEX_COLUMNS); };
	keyCodeDict[INDEX_MODE][DOWN_KEY] = function() { return indexSetPageSlide(activeSlide + INDEX_COLUMNS); };
	keyCodeDict[INDEX_MODE][PAGE_UP_KEY] = function() { return indexSetPageSlide(activeSlide - INDEX_COLUMNS * INDEX_COLUMNS); };
	keyCodeDict[INDEX_MODE][PAGE_DOWN_KEY] = function() { return indexSetPageSlide(activeSlide + INDEX_COLUMNS * INDEX_COLUMNS); };
	keyCodeDict[INDEX_MODE][HOME_KEY] = function() { return indexSetPageSlide(0); };
	keyCodeDict[INDEX_MODE][END_KEY] = function() { return indexSetPageSlide(slides.length - 1); };
	keyCodeDict[INDEX_MODE][ENTER_KEY] = function() { return toggleSlideIndex(); };

	keyCodeDict[DRAWING_MODE][ESCAPE_KEY] = function () { return drawingSwitchToSlideMode(); };

	return keyCodeDict;
}

/** Function to handle all mouse events.
 *
 *	@param	evnt	event
 *	@param	action	type of event (e.g. mouse up, mouse wheel)
 */
function mouseHandlerDispatch(evnt, action)
{
	if (!evnt)
		evnt = window.event;

	var retVal = true;

	if (!processingEffect &amp;&amp; mouseHandlerDictionary[currentMode] &amp;&amp; mouseHandlerDictionary[currentMode][action])
	{
		var subRetVal = mouseHandlerDictionary[currentMode][action](evnt);

		if (subRetVal != null &amp;&amp; subRetVal != undefined)
			retVal = subRetVal;
	}

	if (evnt.preventDefault &amp;&amp; !retVal)
		evnt.preventDefault();

	evnt.returnValue = retVal;

	return retVal;
}

// Set mouse event handler.
document.onmousedown = function(e) { return mouseHandlerDispatch(e, MOUSE_DOWN); };
document.onmouseup = function(e) { return mouseHandlerDispatch(e, MOUSE_UP); };
document.onmousemove = function(e) { return mouseHandlerDispatch(e, MOUSE_MOVE); };

// Moz
if (window.addEventListener)
{
	window.addEventListener('DOMMouseScroll', function(e) { return mouseHandlerDispatch(e, MOUSE_WHEEL); }, false);
}

// Opera Safari OK - may not work in IE
window.onmousewheel = function(e) { return mouseHandlerDispatch(e, MOUSE_WHEEL); };

/** Function to supply the default mouse handler dictionary.
 *
 * @returns default mouse handler dictionary
 */
function getDefaultMouseHandlerDictionary()
{
	var mouseHandlerDict = new Object();

	mouseHandlerDict[SLIDE_MODE] = new Object();
	mouseHandlerDict[INDEX_MODE] = new Object();
	mouseHandlerDict[DRAWING_MODE] = new Object();

	mouseHandlerDict[SLIDE_MODE][MOUSE_DOWN] = function(evnt) { return dispatchEffects(1); };
	mouseHandlerDict[SLIDE_MODE][MOUSE_WHEEL] = function(evnt) { return slideMousewheel(evnt); };

	mouseHandlerDict[INDEX_MODE][MOUSE_DOWN] = function(evnt) { return toggleSlideIndex(); };

	mouseHandlerDict[DRAWING_MODE][MOUSE_DOWN] = function(evnt) { return drawingMousedown(evnt); };
	mouseHandlerDict[DRAWING_MODE][MOUSE_UP] = function(evnt) { return drawingMouseup(evnt); };
	mouseHandlerDict[DRAWING_MODE][MOUSE_MOVE] = function(evnt) { return drawingMousemove(evnt); };

	return mouseHandlerDict;
}

/** Function to switch from slide mode to drawing mode.
*/
function slideSwitchToDrawingMode()
{
	currentMode = DRAWING_MODE;

	var tempDict;

	if (ROOT_NODE.hasAttribute(&quot;style&quot;))
		tempDict = propStrToDict(ROOT_NODE.getAttribute(&quot;style&quot;));
	else
		tempDict = new Object();

	tempDict[&quot;cursor&quot;] = &quot;crosshair&quot;;
	ROOT_NODE.setAttribute(&quot;style&quot;, dictToPropStr(tempDict));
}

/** Function to switch from drawing mode to slide mode.
*/
function drawingSwitchToSlideMode()
{
	currentMode = SLIDE_MODE;

	var tempDict;

	if (ROOT_NODE.hasAttribute(&quot;style&quot;))
		tempDict = propStrToDict(ROOT_NODE.getAttribute(&quot;style&quot;));
	else
		tempDict = new Object();

	tempDict[&quot;cursor&quot;] = &quot;auto&quot;;
	ROOT_NODE.setAttribute(&quot;style&quot;, dictToPropStr(tempDict));
}

/** Function to decrease the number of columns in index mode.
*/
function indexDecreaseNumberOfColumns()
{
	if (INDEX_COLUMNS &gt;= 3)
	{
		INDEX_COLUMNS -= 1;
		INDEX_OFFSET = -1
			indexSetPageSlide(activeSlide);
	}
}

/** Function to increase the number of columns in index mode.
*/
function indexIncreaseNumberOfColumns()
{
	if (INDEX_COLUMNS &lt; 7)
	{
		INDEX_COLUMNS += 1;
		INDEX_OFFSET = -1
			indexSetPageSlide(activeSlide);
	}
}

/** Function to reset the number of columns in index mode.
*/
function indexResetNumberOfColumns()
{
	if (INDEX_COLUMNS != INDEX_COLUMNS_DEFAULT)
	{
		INDEX_COLUMNS = INDEX_COLUMNS_DEFAULT;
		INDEX_OFFSET = -1
			indexSetPageSlide(activeSlide);
	}
}

/** Function to reset path width in drawing mode.
*/
function drawingResetPathWidth()
{
	path_width = path_width_default;
	set_path_paint_width();
}

/** Function to set path width in drawing mode.
 *
 * @param width new path width
 */
function drawingSetPathWidth(width)
{
	path_width = width;
	set_path_paint_width();
}

/** Function to set path colour in drawing mode.
 *
 * @param colour new path colour
 */
function drawingSetPathColour(colour)
{
	path_colour = colour;
}

/** Function to query the duration of the presentation from the user in slide mode.
*/
function slideQueryDuration()
{
	var new_duration = prompt(&quot;Length of presentation in minutes?&quot;, timer_duration);

	if ((new_duration != null) &amp;&amp; (new_duration != ''))
	{
		timer_duration = new_duration;
	}

	updateTimer();
}

/** Function to add new slide in slide mode.
 *
 * @param afterSlide after which slide to insert the new one
 */
function slideAddSlide(afterSlide)
{
	addSlide(afterSlide);
	slideSetActiveSlide(afterSlide + 1);
	updateTimer();
}

/** Function to toggle the visibility of the progress bar in slide mode.
*/
function slideToggleProgressBarVisibility()
{
	if (progress_bar_visible)
	{
		progress_bar_visible = false;
		hideProgressBar();
	}
	else
	{
		progress_bar_visible = true;
		showProgressBar();
	}
}

/** Function to reset the timer in slide mode.
*/
function slideResetTimer()
{
	timer_start = timer_elapsed;
	updateTimer();
}

/** Convenience function to pad a string with zero in front up to a certain length.
 */
function padString(str, len)
{
	var outStr = str;

	while (outStr.length &lt; len)
	{
		outStr = '0' + outStr;
	}

	return outStr;
}

/** Function to update the export layer.
 */
function slideUpdateExportLayer()
{
	// Suspend redraw since we are going to mess with the slides.
	var suspendHandle = ROOT_NODE.suspendRedraw(2000);

	var tmpActiveSlide = activeSlide;
	var tmpActiveEffect = activeEffect;
	var exportedLayers = new Array();

	for (var counterSlides = 0; counterSlides &lt; slides.length; counterSlides++)
	{
		var exportNode;

		setSlideToState(counterSlides, STATE_START);

		var maxEffect = 0;

		if (slides[counterSlides].effects)
		{
			maxEffect = slides[counterSlides].effects.length;
		}

		exportNode = slides[counterSlides].element.cloneNode(true);
		exportNode.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;, &quot;layer&quot;);
		exportNode.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;, &quot;slide_&quot; + padString((counterSlides + 1).toString(), slides.length.toString().length) + &quot;_effect_&quot; + padString(&quot;0&quot;, maxEffect.toString().length));

		exportedLayers.push(exportNode);

		if (slides[counterSlides][&quot;effects&quot;])
		{	
			for (var counter = 0; counter &lt; slides[counterSlides][&quot;effects&quot;].length; counter++)
			{
				for (var subCounter = 0; subCounter &lt; slides[counterSlides][&quot;effects&quot;][counter].length; subCounter++)
				{
					var effect = slides[counterSlides][&quot;effects&quot;][counter][subCounter];
					if (effect[&quot;effect&quot;] == &quot;fade&quot;)
						fade(parseInt(effect[&quot;dir&quot;]), effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;appear&quot;)
						appear(parseInt(effect[&quot;dir&quot;]), effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;pop&quot;)
						pop(parseInt(effect[&quot;dir&quot;]), effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;view&quot;)
						view(parseInt(effect[&quot;dir&quot;]), effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
				}

				var layerName = &quot;slide_&quot; + padString((counterSlides + 1).toString(), slides.length.toString().length) + &quot;_effect_&quot; + padString((counter + 1).toString(), maxEffect.toString().length);
				exportNode = slides[counterSlides].element.cloneNode(true);
				exportNode.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;, &quot;layer&quot;);
				exportNode.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;, layerName);
				exportNode.setAttribute(&quot;id&quot;, layerName);

				exportedLayers.push(exportNode);
			}
		}
	}

	activeSlide = tmpActiveSlide;
	activeEffect = tmpActiveEffect;
	setSlideToState(activeSlide, activeEffect);

	// Copy image.
	var newDoc = document.documentElement.cloneNode(true);

	// Delete viewbox form new imag and set width and height.
	newDoc.removeAttribute('viewbox');
	newDoc.setAttribute('width', WIDTH);
	newDoc.setAttribute('height', HEIGHT);

	// Delete all layers and script elements.
	var nodesToBeRemoved = new Array();

	for (var childCounter = 0; childCounter &lt;  newDoc.childNodes.length; childCounter++)
	{
		var child = newDoc.childNodes[childCounter];

		if (child.nodeType == 1)
		{
			if ((child.nodeName.toUpperCase() == 'G') || (child.nodeName.toUpperCase() == 'SCRIPT'))
			{
				nodesToBeRemoved.push(child);
			}
		}
	}

	for (var ndCounter = 0; ndCounter &lt; nodesToBeRemoved.length; ndCounter++)
	{
		var nd = nodesToBeRemoved[ndCounter];

		// Before removing the node, check whether it contains any definitions.
		var defs = nd.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;defs&quot;);

		for (var defsCounter = 0; defsCounter &lt; defs.length; defsCounter++)
		{
			if (defs[defsCounter].id)
			{
				newDoc.appendChild(defs[defsCounter].cloneNode(true));
			}
		}

		// Remove node.
		nd.parentNode.removeChild(nd);
	}

	// Set current layer.
	if (exportedLayers[0])
	{
		var namedView;

		for (var nodeCounter = 0; nodeCounter &lt; newDoc.childNodes.length; nodeCounter++)
		{
			if ((newDoc.childNodes[nodeCounter].nodeType == 1) &amp;&amp; (newDoc.childNodes[nodeCounter].getAttribute('id') == 'base'))
			{
				namedView = newDoc.childNodes[nodeCounter];
			}
		}

		if (namedView)
		{
			namedView.setAttributeNS(NSS['inkscape'], 'current-layer', exportedLayers[0].getAttributeNS(NSS['inkscape'], 'label'));
		}
	}

	// Add exported layers.
	while (exportedLayers.length &gt; 0)
	{
		var nd = exportedLayers.pop();

		nd.setAttribute(&quot;opacity&quot;,1);
		nd.style.display = &quot;inherit&quot;;

		newDoc.appendChild(nd);
	}

	// Serialise the new document.
  window.location = 'data:application/svg+xml;base64;charset=utf-8,' + window.btoa(unescape(encodeURIComponent((new XMLSerializer()).serializeToString(newDoc))));

	// Unsuspend redraw.
	ROOT_NODE.unsuspendRedraw(suspendHandle);
	ROOT_NODE.forceRedraw();
}

/** Function to undo last drawing operation.
*/
function drawingUndo()
{
	mouse_presentation_path = null;
	mouse_original_path = null;

	if (history_presentation_elements.length &gt; 0)
	{
		var p = history_presentation_elements.pop();
		var parent = p.parentNode.removeChild(p);

		p = history_original_elements.pop();
		parent = p.parentNode.removeChild(p);
	}
}

/** Event handler for mouse down in drawing mode.
 *
 *  @param e the event
 */
function drawingMousedown(e)
{
	var value = 0;

	if (e.button)
		value = e.button;
	else if (e.which)
		value = e.which;

	if (value == 1)
	{
		history_counter++;

		var p = calcCoord(e);

		mouse_last_x = e.clientX;
		mouse_last_y = e.clientY;
		mouse_original_path = document.createElementNS(NSS[&quot;svg&quot;], &quot;path&quot;);
		mouse_original_path.setAttribute(&quot;stroke&quot;, path_colour);
		mouse_original_path.setAttribute(&quot;stroke-width&quot;, path_paint_width);
		mouse_original_path.setAttribute(&quot;fill&quot;, &quot;none&quot;);
		mouse_original_path.setAttribute(&quot;id&quot;, &quot;path &quot; + Date());
		mouse_original_path.setAttribute(&quot;d&quot;, &quot;M&quot; + p.x + &quot;,&quot; + p.y);
		slides[activeSlide][&quot;original_element&quot;].appendChild(mouse_original_path);
		history_original_elements.push(mouse_original_path);

		mouse_presentation_path = document.createElementNS(NSS[&quot;svg&quot;], &quot;path&quot;);
		mouse_presentation_path.setAttribute(&quot;stroke&quot;, path_colour);
		mouse_presentation_path.setAttribute(&quot;stroke-width&quot;, path_paint_width);
		mouse_presentation_path.setAttribute(&quot;fill&quot;, &quot;none&quot;);
		mouse_presentation_path.setAttribute(&quot;id&quot;, &quot;path &quot; + Date() + &quot; presentation copy&quot;);
		mouse_presentation_path.setAttribute(&quot;d&quot;, &quot;M&quot; + p.x + &quot;,&quot; + p.y);

		if (slides[activeSlide][&quot;viewGroup&quot;])
			slides[activeSlide][&quot;viewGroup&quot;].appendChild(mouse_presentation_path);
		else
			slides[activeSlide][&quot;element&quot;].appendChild(mouse_presentation_path);

		history_presentation_elements.push(mouse_presentation_path);

		return false;
	}

	return true;
}

/** Event handler for mouse up in drawing mode.
 *
 *  @param e the event
 */
function drawingMouseup(e)
{
	if(!e)
		e = window.event;

	if (mouse_presentation_path != null)
	{
		var p = calcCoord(e);
		var d = mouse_presentation_path.getAttribute(&quot;d&quot;);
		d += &quot; L&quot; + p.x + &quot;,&quot; + p.y;
		mouse_presentation_path.setAttribute(&quot;d&quot;, d);
		mouse_presentation_path = null;
		mouse_original_path.setAttribute(&quot;d&quot;, d);
		mouse_original_path = null;

		return false;
	}

	return true;
}

/** Event handler for mouse move in drawing mode.
 *
 *  @param e the event
 */
function drawingMousemove(e)
{
	if(!e)
		e = window.event;

	var dist = (mouse_last_x - e.clientX) * (mouse_last_x - e.clientX) + (mouse_last_y - e.clientY) * (mouse_last_y - e.clientY);

	if (mouse_presentation_path == null)
	{
		return true;
	}

	if (dist &gt;= mouse_min_dist_sqr)
	{
		var p = calcCoord(e);
		var d = mouse_presentation_path.getAttribute(&quot;d&quot;);
		d += &quot; L&quot; + p.x + &quot;,&quot; + p.y;
		mouse_presentation_path.setAttribute(&quot;d&quot;, d);
		mouse_original_path.setAttribute(&quot;d&quot;, d);
		mouse_last_x = e.clientX;
		mouse_last_y = e.clientY;
	}

	return false;
}

/** Event handler for mouse wheel events in slide mode.
 *  based on http://adomas.org/javascript-mouse-wheel/
 *
 *  @param e the event
 */
function slideMousewheel(e)
{
	var delta = 0;

	if (!e)
		e = window.event;

	if (e.wheelDelta)
	{ // IE Opera
		delta = e.wheelDelta/120;
	}
	else if (e.detail)
	{ // MOZ
		delta = -e.detail/3;
	}

	if (delta &gt; 0)
		skipEffects(-1);
	else if (delta &lt; 0)
		skipEffects(1);

	if (e.preventDefault)
		e.preventDefault();

	e.returnValue = false;
}

/** Event handler for mouse wheel events in index mode.
 *  based on http://adomas.org/javascript-mouse-wheel/
 *
 *  @param e the event
 */
function indexMousewheel(e)
{
	var delta = 0;

	if (!e)
		e = window.event;

	if (e.wheelDelta)
	{ // IE Opera
		delta = e.wheelDelta/120;
	}
	else if (e.detail)
	{ // MOZ
		delta = -e.detail/3;
	}

	if (delta &gt; 0)
		indexSetPageSlide(activeSlide - INDEX_COLUMNS * INDEX_COLUMNS);
	else if (delta &lt; 0)
		indexSetPageSlide(activeSlide + INDEX_COLUMNS * INDEX_COLUMNS);

	if (e.preventDefault)
		e.preventDefault();

	e.returnValue = false;
}

/** Function to set the path paint width.
*/
function set_path_paint_width()
{
	var svgPoint1 = document.documentElement.createSVGPoint();
	var svgPoint2 = document.documentElement.createSVGPoint();

	svgPoint1.x = 0.0;
	svgPoint1.y = 0.0;
	svgPoint2.x = 1.0;
	svgPoint2.y = 0.0;

	var matrix = slides[activeSlide][&quot;element&quot;].getTransformToElement(ROOT_NODE);

	if (slides[activeSlide][&quot;viewGroup&quot;])
		matrix = slides[activeSlide][&quot;viewGroup&quot;].getTransformToElement(ROOT_NODE);

	svgPoint1 = svgPoint1.matrixTransform(matrix);
	svgPoint2 = svgPoint2.matrixTransform(matrix);

	path_paint_width = path_width / Math.sqrt((svgPoint2.x - svgPoint1.x) * (svgPoint2.x - svgPoint1.x) + (svgPoint2.y - svgPoint1.y) * (svgPoint2.y - svgPoint1.y));
}

/** The view effect.
 *
 *  @param dir direction the effect should be played (1 = forwards, -1 = backwards)
 *  @param element the element the effect should be applied to
 *  @param time the time that has elapsed since the beginning of the effect
 *  @param options a dictionary with additional options (e.g. length of the effect); for the view effect the options need to contain the old and the new matrix.
 */
function view(dir, element, time, options)
{
	var length = 250;
	var fraction;

	if (!options[&quot;matrixInitial&quot;])
	{
		var tempString = slides[activeSlide][&quot;viewGroup&quot;].getAttribute(&quot;transform&quot;);

		if (tempString)
			options[&quot;matrixInitial&quot;] = (new matrixSVG()).fromAttribute(tempString);
		else
			options[&quot;matrixInitial&quot;] = (new matrixSVG()).fromSVGElements(1, 0, 0, 1, 0, 0);
	}

	if ((time == STATE_END) || (time == STATE_START))
		fraction = 1;
	else
	{
		if (options &amp;&amp; options[&quot;length&quot;])
			length = options[&quot;length&quot;];

		fraction = time / length;
	}

	if (dir == 1)
	{
		if (fraction &lt;= 0)
		{
			element.setAttribute(&quot;transform&quot;, options[&quot;matrixInitial&quot;].toAttribute());
		}
		else if (fraction &gt;= 1)
		{
			element.setAttribute(&quot;transform&quot;, options[&quot;matrixNew&quot;].toAttribute());

			set_path_paint_width();

			options[&quot;matrixInitial&quot;] = null;
			return true;
		}
		else
		{
			element.setAttribute(&quot;transform&quot;, options[&quot;matrixInitial&quot;].mix(options[&quot;matrixNew&quot;], fraction).toAttribute());
		}
	}
	else if (dir == -1)
	{
		if (fraction &lt;= 0)
		{
			element.setAttribute(&quot;transform&quot;, options[&quot;matrixInitial&quot;].toAttribute());
		}
		else if (fraction &gt;= 1)
		{
			element.setAttribute(&quot;transform&quot;, options[&quot;matrixOld&quot;].toAttribute());
			set_path_paint_width();

			options[&quot;matrixInitial&quot;] = null;
			return true;
		}
		else
		{
			element.setAttribute(&quot;transform&quot;, options[&quot;matrixInitial&quot;].mix(options[&quot;matrixOld&quot;], fraction).toAttribute());
		}
	}

	return false;
}

/** The fade effect.
 *
 *  @param dir direction the effect should be played (1 = forwards, -1 = backwards)
 *  @param element the element the effect should be applied to
 *  @param time the time that has elapsed since the beginning of the effect
 *  @param options a dictionary with additional options (e.g. length of the effect)
 */
function fade(dir, element, time, options)
{
	var length = 250;
	var fraction;

	if ((time == STATE_END) || (time == STATE_START))
		fraction = 1;
	else
	{
		if (options &amp;&amp; options[&quot;length&quot;])
			length = options[&quot;length&quot;];

		fraction = time / length;
	}

	if (dir == 1)
	{
		if (fraction &lt;= 0)
		{
			element.style.display = &quot;none&quot;;
			element.setAttribute(&quot;opacity&quot;, 0);
		}
		else if (fraction &gt;= 1)
		{
			element.style.display = &quot;inherit&quot;;
			element.setAttribute(&quot;opacity&quot;, 1);
			return true;
		}
		else
		{
			element.style.display = &quot;inherit&quot;;
			element.setAttribute(&quot;opacity&quot;, fraction);
		}
	}
	else if (dir == -1)
	{
		if (fraction &lt;= 0)
		{
			element.style.display = &quot;inherit&quot;;
			element.setAttribute(&quot;opacity&quot;, 1);
		}
		else if (fraction &gt;= 1)
		{
			element.setAttribute(&quot;opacity&quot;, 0);
			element.style.display = &quot;none&quot;;
			return true;
		}
		else
		{
			element.style.display = &quot;inherit&quot;;
			element.setAttribute(&quot;opacity&quot;, 1 - fraction);
		}
	}
	return false;
}

/** The appear effect.
 *
 *  @param dir direction the effect should be played (1 = forwards, -1 = backwards)
 *  @param element the element the effect should be applied to
 *  @param time the time that has elapsed since the beginning of the effect
 *  @param options a dictionary with additional options (e.g. length of the effect)
 */
function appear(dir, element, time, options)
{
	if (dir == 1)
	{
		element.style.display = &quot;inherit&quot;;
		element.setAttribute(&quot;opacity&quot;,1);
	}
	else if (dir == -1)
	{
		element.style.display = &quot;none&quot;;
		element.setAttribute(&quot;opacity&quot;,0);
	}
	return true;
}

/** The pop effect.
 *
 *  @param dir direction the effect should be played (1 = forwards, -1 = backwards)
 *  @param element the element the effect should be applied to
 *  @param time the time that has elapsed since the beginning of the effect
 *  @param options a dictionary with additional options (e.g. length of the effect)
 */
function pop(dir, element, time, options)
{
	var length = 500;
	var fraction;

	if ((time == STATE_END) || (time == STATE_START))
		fraction = 1;
	else
	{
		if (options &amp;&amp; options[&quot;length&quot;])
			length = options[&quot;length&quot;];

		fraction = time / length;
	}

	if (dir == 1)
	{
		if (fraction &lt;= 0)
		{
			element.setAttribute(&quot;opacity&quot;, 0);
			element.setAttribute(&quot;transform&quot;, &quot;scale(0)&quot;);
			element.style.display = &quot;none&quot;;
		}
		else if (fraction &gt;= 1)
		{
			element.setAttribute(&quot;opacity&quot;, 1);
			element.removeAttribute(&quot;transform&quot;);
			element.style.display = &quot;inherit&quot;;
			return true;
		}
		else
		{
			element.style.display = &quot;inherit&quot;;
			var opacityFraction = fraction * 3;
			if (opacityFraction &gt; 1)
				opacityFraction = 1;
			element.setAttribute(&quot;opacity&quot;, opacityFraction);
			var offsetX = WIDTH * (1.0 - fraction) / 2.0;
			var offsetY = HEIGHT * (1.0 - fraction) / 2.0;
			element.setAttribute(&quot;transform&quot;, &quot;translate(&quot; + offsetX + &quot;,&quot; + offsetY + &quot;) scale(&quot; + fraction + &quot;)&quot;);
		}
	}
	else if (dir == -1)
	{
		if (fraction &lt;= 0)
		{
			element.setAttribute(&quot;opacity&quot;, 1);
			element.setAttribute(&quot;transform&quot;, &quot;scale(1)&quot;);
			element.style.display = &quot;inherit&quot;;
		}
		else if (fraction &gt;= 1)
		{
			element.setAttribute(&quot;opacity&quot;, 0);
			element.removeAttribute(&quot;transform&quot;);
			element.style.display = &quot;none&quot;;
			return true;
		}
		else
		{
			element.setAttribute(&quot;opacity&quot;, 1 - fraction);
			element.setAttribute(&quot;transform&quot;, &quot;scale(&quot; + 1 - fraction + &quot;)&quot;);
			element.style.display = &quot;inherit&quot;;
		}
	}
	return false;
}

/** Function to set a slide either to the start or the end state.
 *  
 *  @param slide the slide to use
 *  @param state the state into which the slide should be set
 */
function setSlideToState(slide, state)
{
	slides[slide][&quot;viewGroup&quot;].setAttribute(&quot;transform&quot;, slides[slide].initialView);

	if (slides[slide][&quot;effects&quot;])
	{	
		if (state == STATE_END)
		{
			for (var counter = 0; counter &lt; slides[slide][&quot;effects&quot;].length; counter++)
			{
				for (var subCounter = 0; subCounter &lt; slides[slide][&quot;effects&quot;][counter].length; subCounter++)
				{
					var effect = slides[slide][&quot;effects&quot;][counter][subCounter];
					if (effect[&quot;effect&quot;] == &quot;fade&quot;)
						fade(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;appear&quot;)
						appear(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;pop&quot;)
						pop(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;view&quot;)
						view(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
				}
			}
		}
		else if (state == STATE_START)
		{
			for (var counter = slides[slide][&quot;effects&quot;].length - 1; counter &gt;= 0; counter--)
			{
				for (var subCounter = 0; subCounter &lt; slides[slide][&quot;effects&quot;][counter].length; subCounter++)
				{
					var effect = slides[slide][&quot;effects&quot;][counter][subCounter];
					if (effect[&quot;effect&quot;] == &quot;fade&quot;)
						fade(parseInt(effect[&quot;dir&quot;]) * -1, effect[&quot;element&quot;], STATE_START, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;appear&quot;)
						appear(parseInt(effect[&quot;dir&quot;]) * -1, effect[&quot;element&quot;], STATE_START, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;pop&quot;)
						pop(parseInt(effect[&quot;dir&quot;]) * -1, effect[&quot;element&quot;], STATE_START, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;view&quot;)
						view(parseInt(effect[&quot;dir&quot;]) * -1, effect[&quot;element&quot;], STATE_START, effect[&quot;options&quot;]);	
				}
			}
		}
		else
		{
			setSlideToState(slide, STATE_START);

			for (var counter = 0; counter &lt; slides[slide][&quot;effects&quot;].length &amp;&amp; counter &lt; state; counter++)
			{
				for (var subCounter = 0; subCounter &lt; slides[slide][&quot;effects&quot;][counter].length; subCounter++)
				{
					var effect = slides[slide][&quot;effects&quot;][counter][subCounter];
					if (effect[&quot;effect&quot;] == &quot;fade&quot;)
						fade(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;appear&quot;)
						appear(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;pop&quot;)
						pop(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;view&quot;)
						view(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
				}
			}
		}
	}

	window.location.hash = (activeSlide + 1) + '_' + activeEffect;
}

/** Convenience function to translate a attribute string into a dictionary.
 *
 *	@param str the attribute string
 *  @return a dictionary
 *  @see dictToPropStr
 */
function propStrToDict(str)
{
	var list = str.split(&quot;;&quot;);
	var obj = new Object();

	for (var counter = 0; counter &lt; list.length; counter++)
	{
		var subStr = list[counter];
		var subList = subStr.split(&quot;:&quot;);
		if (subList.length == 2)
		{
			obj[subList[0]] = subList[1];
		}	
	}

	return obj;
}

/** Convenience function to translate a dictionary into a string that can be used as an attribute.
 *
 *  @param dict the dictionary to convert
 *  @return a string that can be used as an attribute
 *  @see propStrToDict
 */
function dictToPropStr(dict)
{
	var str = &quot;&quot;;

	for (var key in dict)
	{
		str += key + &quot;:&quot; + dict[key] + &quot;;&quot;;
	}

	return str;
}

/** Sub-function to add a suffix to the ids of the node and all its children.
 *	
 *	@param node the node to change
 *	@param suffix the suffix to add
 *	@param replace dictionary of replaced ids
 *  @see suffixNodeIds
 */
function suffixNoneIds_sub(node, suffix, replace)
{
	if (node.nodeType == 1)
	{
		if (node.getAttribute(&quot;id&quot;))
		{
			var id = node.getAttribute(&quot;id&quot;)
				replace[&quot;#&quot; + id] = id + suffix;
			node.setAttribute(&quot;id&quot;, id + suffix);
		}

		if ((node.nodeName == &quot;use&quot;) &amp;&amp; (node.getAttributeNS(NSS[&quot;xlink&quot;], &quot;href&quot;)) &amp;&amp; (replace[node.getAttribute(NSS[&quot;xlink&quot;], &quot;href&quot;)]))
			node.setAttribute(NSS[&quot;xlink&quot;], &quot;href&quot;, node.getAttribute(NSS[&quot;xlink&quot;], &quot;href&quot;) + suffix);

		if (node.childNodes)
		{
			for (var counter = 0; counter &lt; node.childNodes.length; counter++)
				suffixNoneIds_sub(node.childNodes[counter], suffix, replace);
		}
	}
}

/** Function to add a suffix to the ids of the node and all its children.
 *	
 *	@param node the node to change
 *	@param suffix the suffix to add
 *  @return the changed node
 *  @see suffixNodeIds_sub
 */
function suffixNodeIds(node, suffix)
{
	var replace = new Object();

	suffixNoneIds_sub(node, suffix, replace);

	return node;
}

/** Function to build a progress bar.
 *	
 *  @param parent node to attach the progress bar to
 */
function createProgressBar(parent_node)
{
	var g = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);
	g.setAttribute(&quot;clip-path&quot;, &quot;url(#jessyInkSlideClipPath)&quot;);
	g.setAttribute(&quot;id&quot;, &quot;layer_progress_bar&quot;);
	g.setAttribute(&quot;style&quot;, &quot;display: none;&quot;);

	var rect_progress_bar = document.createElementNS(NSS[&quot;svg&quot;], &quot;rect&quot;);
	rect_progress_bar.setAttribute(&quot;style&quot;, &quot;marker: none; fill: rgb(128, 128, 128); stroke: none;&quot;);
	rect_progress_bar.setAttribute(&quot;id&quot;, &quot;rect_progress_bar&quot;);
	rect_progress_bar.setAttribute(&quot;x&quot;, 0);
	rect_progress_bar.setAttribute(&quot;y&quot;, 0.99 * HEIGHT);
	rect_progress_bar.setAttribute(&quot;width&quot;, 0);
	rect_progress_bar.setAttribute(&quot;height&quot;, 0.01 * HEIGHT);
	g.appendChild(rect_progress_bar);

	var circle_timer_indicator = document.createElementNS(NSS[&quot;svg&quot;], &quot;circle&quot;);
	circle_timer_indicator.setAttribute(&quot;style&quot;, &quot;marker: none; fill: rgb(255, 0, 0); stroke: none;&quot;);
	circle_timer_indicator.setAttribute(&quot;id&quot;, &quot;circle_timer_indicator&quot;);
	circle_timer_indicator.setAttribute(&quot;cx&quot;, 0.005 * HEIGHT);
	circle_timer_indicator.setAttribute(&quot;cy&quot;, 0.995 * HEIGHT);
	circle_timer_indicator.setAttribute(&quot;r&quot;, 0.005 * HEIGHT);
	g.appendChild(circle_timer_indicator);

	parent_node.appendChild(g);
}

/** Function to hide the progress bar.
 *	
 */
function hideProgressBar()
{
	var progress_bar = document.getElementById(&quot;layer_progress_bar&quot;);

	if (!progress_bar)
	{
		return;
	}

	progress_bar.setAttribute(&quot;style&quot;, &quot;display: none;&quot;);
}

/** Function to show the progress bar.
 *	
 */
function showProgressBar()
{
	var progress_bar = document.getElementById(&quot;layer_progress_bar&quot;);

	if (!progress_bar)
	{
		return;
	}

	progress_bar.setAttribute(&quot;style&quot;, &quot;display: inherit;&quot;);
}

/** Set progress bar value.
 *	
 *	@param value the current slide number
 *
 */
function setProgressBarValue(value)
{
	var rect_progress_bar = document.getElementById(&quot;rect_progress_bar&quot;);

	if (!rect_progress_bar)
	{
		return;
	}

	if (value &lt; 1)
	{
		// First slide, assumed to be the title of the presentation
		var x = 0;
		var w = 0.01 * HEIGHT;
	}
	else if (value &gt;= slides.length - 1)
	{
		// Last slide, assumed to be the end of the presentation
		var x = WIDTH - 0.01 * HEIGHT;
		var w = 0.01 * HEIGHT;
	}
	else
	{
		value -= 1;
		value /= (slides.length - 2);

		var x = WIDTH * value;
		var w = WIDTH / (slides.length - 2);
	}

	rect_progress_bar.setAttribute(&quot;x&quot;, x);
	rect_progress_bar.setAttribute(&quot;width&quot;, w);
}

/** Set time indicator.
 *	
 *	@param value the percentage of time elapse so far between 0.0 and 1.0
 *
 */
function setTimeIndicatorValue(value)
{
	var circle_timer_indicator = document.getElementById(&quot;circle_timer_indicator&quot;);

	if (!circle_timer_indicator)
	{
		return;
	}

	if (value &lt; 0.0)
	{
		value = 0.0;
	}

	if (value &gt; 1.0)
	{
		value = 1.0;
	}

	var cx = (WIDTH - 0.01 * HEIGHT) * value + 0.005 * HEIGHT;
	circle_timer_indicator.setAttribute(&quot;cx&quot;, cx);
}

/** Update timer.
 *	
 */
function updateTimer()
{
	timer_elapsed += 1;
	setTimeIndicatorValue((timer_elapsed - timer_start) / (60 * timer_duration));
}

/** Convert screen coordinates to document coordinates.
 *
 *  @param e event with screen coordinates
 *
 *  @return coordinates in SVG file coordinate system	
 */
function calcCoord(e)
{
	var svgPoint = document.documentElement.createSVGPoint();
	svgPoint.x = e.clientX + window.pageXOffset;
	svgPoint.y = e.clientY + window.pageYOffset;

	var matrix = slides[activeSlide][&quot;element&quot;].getScreenCTM();

	if (slides[activeSlide][&quot;viewGroup&quot;])
		matrix = slides[activeSlide][&quot;viewGroup&quot;].getScreenCTM();

	svgPoint = svgPoint.matrixTransform(matrix.inverse());
	return svgPoint;
}

/** Add slide.
 *
 *	@param after_slide after which slide the new slide should be inserted into the presentation
 */
function addSlide(after_slide)
{
	number_of_added_slides++;

	var g = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);
	g.setAttribute(&quot;clip-path&quot;, &quot;url(#jessyInkSlideClipPath)&quot;);
	g.setAttribute(&quot;id&quot;, &quot;Whiteboard &quot; + Date() + &quot; presentation copy&quot;);
	g.setAttribute(&quot;style&quot;, &quot;display: none;&quot;);

	var new_slide = new Object();
	new_slide[&quot;element&quot;] = g;

	// Set build in transition.
	new_slide[&quot;transitionIn&quot;] = new Object();
	var dict = defaultTransitionInDict;
	new_slide[&quot;transitionIn&quot;][&quot;name&quot;] = dict[&quot;name&quot;];
	new_slide[&quot;transitionIn&quot;][&quot;options&quot;] = new Object();

	for (key in dict)
		if (key != &quot;name&quot;)
			new_slide[&quot;transitionIn&quot;][&quot;options&quot;][key] = dict[key];

	// Set build out transition.
	new_slide[&quot;transitionOut&quot;] = new Object();
	dict = defaultTransitionOutDict;
	new_slide[&quot;transitionOut&quot;][&quot;name&quot;] = dict[&quot;name&quot;];
	new_slide[&quot;transitionOut&quot;][&quot;options&quot;] = new Object();

	for (key in dict)
		if (key != &quot;name&quot;)
			new_slide[&quot;transitionOut&quot;][&quot;options&quot;][key] = dict[key];

	// Copy master slide content.
	if (masterSlide)
	{
		var clonedNode = suffixNodeIds(masterSlide.cloneNode(true), &quot;_&quot; + Date() + &quot; presentation_copy&quot;);
		clonedNode.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;);
		clonedNode.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;);
		clonedNode.style.display = &quot;inherit&quot;;

		g.appendChild(clonedNode);
	}

	// Substitute auto texts.
	substituteAutoTexts(g, &quot;Whiteboard &quot; + number_of_added_slides, &quot;W&quot; + number_of_added_slides, slides.length);

	g.setAttribute(&quot;onmouseover&quot;, &quot;if ((currentMode == INDEX_MODE) &amp;&amp; ( activeSlide != &quot; + (after_slide + 1) + &quot;)) { indexSetActiveSlide(&quot; + (after_slide + 1) + &quot;); };&quot;);

	// Create a transform group.
	var transformGroup = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);

	// Add content to transform group.
	while (g.firstChild)
		transformGroup.appendChild(g.firstChild);

	// Transfer the transform attribute from the node to the transform group.
	if (g.getAttribute(&quot;transform&quot;))
	{
		transformGroup.setAttribute(&quot;transform&quot;, g.getAttribute(&quot;transform&quot;));
		g.removeAttribute(&quot;transform&quot;);
	}

	// Create a view group.
	var viewGroup = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);

	viewGroup.appendChild(transformGroup);
	new_slide[&quot;viewGroup&quot;] = g.appendChild(viewGroup);

	// Insert background.
	if (BACKGROUND_COLOR != null)
	{
		var rectNode = document.createElementNS(NSS[&quot;svg&quot;], &quot;rect&quot;);

		rectNode.setAttribute(&quot;x&quot;, 0);
		rectNode.setAttribute(&quot;y&quot;, 0);
		rectNode.setAttribute(&quot;width&quot;, WIDTH);
		rectNode.setAttribute(&quot;height&quot;, HEIGHT);
		rectNode.setAttribute(&quot;id&quot;, &quot;jessyInkBackground&quot; + Date());
		rectNode.setAttribute(&quot;fill&quot;, BACKGROUND_COLOR);

		new_slide[&quot;viewGroup&quot;].insertBefore(rectNode, new_slide[&quot;viewGroup&quot;].firstChild);
	}

	// Set initial view even if there are no other views.
	var matrixOld = (new matrixSVG()).fromElements(1, 0, 0, 0, 1, 0, 0, 0, 1);

	new_slide[&quot;viewGroup&quot;].setAttribute(&quot;transform&quot;, matrixOld.toAttribute());
	new_slide.initialView = matrixOld.toAttribute();

	// Insert slide
	var node = slides[after_slide][&quot;element&quot;];
	var next_node = node.nextSibling;
	var parent_node = node.parentNode;

	if (next_node)
	{
		parent_node.insertBefore(g, next_node);
	}
	else
	{
		parent_node.appendChild(g);
	}

	g = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);
	g.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;, &quot;layer&quot;);
	g.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;, &quot;Whiteboard &quot; + number_of_added_slides);
	g.setAttribute(&quot;clip-path&quot;, &quot;url(#jessyInkSlideClipPath)&quot;);
	g.setAttribute(&quot;id&quot;, &quot;Whiteboard &quot; + Date());
	g.setAttribute(&quot;style&quot;, &quot;display: none;&quot;);

	new_slide[&quot;original_element&quot;] = g;

	node = slides[after_slide][&quot;original_element&quot;];
	next_node = node.nextSibling;
	parent_node = node.parentNode;

	if (next_node)
	{
		parent_node.insertBefore(g, next_node);
	}
	else
	{
		parent_node.appendChild(g);
	}

	before_new_slide = slides.slice(0, after_slide + 1);
	after_new_slide = slides.slice(after_slide + 1);
	slides = before_new_slide.concat(new_slide, after_new_slide);

	//resetting the counter attributes on the slides that follow the new slide...
	for (var counter = after_slide+2; counter &lt; slides.length; counter++)
	{
		slides[counter][&quot;element&quot;].setAttribute(&quot;onmouseover&quot;, &quot;if ((currentMode == INDEX_MODE) &amp;&amp; ( activeSlide != &quot; + counter + &quot;)) { indexSetActiveSlide(&quot; + counter + &quot;); };&quot;);
	}
}

/** Convenience function to obtain a transformation matrix from a point matrix.
 *
 *	@param mPoints Point matrix.
 *	@return A transformation matrix.
 */
function pointMatrixToTransformation(mPoints)
{
	mPointsOld = (new matrixSVG()).fromElements(0, WIDTH, WIDTH, 0, 0, HEIGHT, 1, 1, 1);

	return mPointsOld.mult(mPoints.inv());
}

/** Convenience function to obtain a matrix with three corners of a rectangle.
 *
 *	@param rect an svg rectangle
 *	@return a matrixSVG containing three corners of the rectangle
 */
function rectToMatrix(rect)
{
	rectWidth = rect.getBBox().width;
	rectHeight = rect.getBBox().height;
	rectX = rect.getBBox().x;
	rectY = rect.getBBox().y;
	rectXcorr = 0;
	rectYcorr = 0;

	scaleX = WIDTH / rectWidth;
	scaleY = HEIGHT / rectHeight;

	if (scaleX &gt; scaleY)
	{
		scaleX = scaleY;
		rectXcorr -= (WIDTH / scaleX - rectWidth) / 2;
		rectWidth = WIDTH / scaleX;
	}	
	else
	{
		scaleY = scaleX;
		rectYcorr -= (HEIGHT / scaleY - rectHeight) / 2;
		rectHeight = HEIGHT / scaleY;
	}

	if (rect.transform.baseVal.numberOfItems &lt; 1)
	{
		mRectTrans = (new matrixSVG()).fromElements(1, 0, 0, 0, 1, 0, 0, 0, 1);
	}
	else
	{
		mRectTrans = (new matrixSVG()).fromSVGMatrix(rect.transform.baseVal.consolidate().matrix);
	}

	newBasePoints = (new matrixSVG()).fromElements(rectX, rectX, rectX, rectY, rectY, rectY, 1, 1, 1);
	newVectors = (new matrixSVG()).fromElements(rectXcorr, rectXcorr + rectWidth, rectXcorr + rectWidth, rectYcorr, rectYcorr, rectYcorr + rectHeight, 0, 0, 0);

	return mRectTrans.mult(newBasePoints.add(newVectors));
}

/** Function to handle JessyInk elements.
 *
 *	@param	node	Element node.
 */
function handleElement(node)
{
	if (node.getAttributeNS(NSS['jessyink'], 'element') == 'core.video')
	{
		var url;
		var width;
		var height;
		var x;
		var y;
		var transform;

		var tspans = node.getElementsByTagNameNS(&quot;http://www.w3.org/2000/svg&quot;, &quot;tspan&quot;);

		for (var tspanCounter = 0; tspanCounter &lt; tspans.length; tspanCounter++)
		{
			if (tspans[tspanCounter].getAttributeNS(&quot;https://launchpad.net/jessyink&quot;, &quot;video&quot;) == &quot;url&quot;)
			{
				url = tspans[tspanCounter].firstChild.nodeValue;
			}
		}

		var rects = node.getElementsByTagNameNS(&quot;http://www.w3.org/2000/svg&quot;, &quot;rect&quot;);

		for (var rectCounter = 0; rectCounter &lt; rects.length; rectCounter++)
		{
			if (rects[rectCounter].getAttributeNS(&quot;https://launchpad.net/jessyink&quot;, &quot;video&quot;) == &quot;rect&quot;)
			{
				x = rects[rectCounter].getAttribute(&quot;x&quot;);
				y = rects[rectCounter].getAttribute(&quot;y&quot;);
				width = rects[rectCounter].getAttribute(&quot;width&quot;);
				height = rects[rectCounter].getAttribute(&quot;height&quot;);
				transform = rects[rectCounter].getAttribute(&quot;transform&quot;);
			}
		}

		for (var childCounter = 0; childCounter &lt; node.childNodes.length; childCounter++)
		{
			if (node.childNodes[childCounter].nodeType == 1)
			{
				if (node.childNodes[childCounter].style)
				{
					node.childNodes[childCounter].style.display = 'none';
				}
				else
				{
					node.childNodes[childCounter].setAttribute(&quot;style&quot;, &quot;display: none;&quot;);
				}
			}
		}

		var foreignNode = document.createElementNS(&quot;http://www.w3.org/2000/svg&quot;, &quot;foreignObject&quot;);
		foreignNode.setAttribute(&quot;x&quot;, x);
		foreignNode.setAttribute(&quot;y&quot;, y);
		foreignNode.setAttribute(&quot;width&quot;, width);
		foreignNode.setAttribute(&quot;height&quot;, height);
		foreignNode.setAttribute(&quot;transform&quot;, transform);

		var videoNode = document.createElementNS(&quot;http://www.w3.org/1999/xhtml&quot;, &quot;video&quot;);
		videoNode.setAttribute(&quot;src&quot;, url);

		foreignNode.appendChild(videoNode);
		node.appendChild(foreignNode);
	}
}

/** Class processing the location hash.
 *
 *	@param str location hash
 */
function LocationHash(str)
{
	this.slideNumber = 0;
	this.effectNumber = 0;

	str = str.substr(1, str.length - 1);

	var parts = str.split('_');

	// Try to extract slide number.
	if (parts.length &gt;= 1)
	{
		try
		{
			var slideNumber = parseInt(parts[0]);

			if (!isNaN(slideNumber))
			{
				this.slideNumber = slideNumber - 1;
			}
		}
		catch (e)
		{
		}
	}
	
	// Try to extract effect number.
	if (parts.length &gt;= 2)
	{
		try
		{
			var effectNumber = parseInt(parts[1]);

			if (!isNaN(effectNumber))
			{
				this.effectNumber = effectNumber;
			}
		}
		catch (e)
		{
		}
	}
}

/** Class representing an svg matrix.
*/
function matrixSVG()
{
	this.e11 = 0; // a
	this.e12 = 0; // c
	this.e13 = 0; // e
	this.e21 = 0; // b
	this.e22 = 0; // d
	this.e23 = 0; // f
	this.e31 = 0;
	this.e32 = 0;
	this.e33 = 0;
}

/** Constructor function.
 *
 *	@param a element a (i.e. 1, 1) as described in the svg standard.
 *	@param b element b (i.e. 2, 1) as described in the svg standard.
 *	@param c element c (i.e. 1, 2) as described in the svg standard.
 *	@param d element d (i.e. 2, 2) as described in the svg standard.
 *	@param e element e (i.e. 1, 3) as described in the svg standard.
 *	@param f element f (i.e. 2, 3) as described in the svg standard.
 */
matrixSVG.prototype.fromSVGElements = function(a, b, c, d, e, f)
{
	this.e11 = a;
	this.e12 = c;
	this.e13 = e;
	this.e21 = b;
	this.e22 = d;
	this.e23 = f;
	this.e31 = 0;
	this.e32 = 0;
	this.e33 = 1;

	return this;
}

/** Constructor function.
 *
 *	@param matrix an svg matrix as described in the svg standard.
 */
matrixSVG.prototype.fromSVGMatrix = function(m)
{
	this.e11 = m.a;
	this.e12 = m.c;
	this.e13 = m.e;
	this.e21 = m.b;
	this.e22 = m.d;
	this.e23 = m.f;
	this.e31 = 0;
	this.e32 = 0;
	this.e33 = 1;

	return this;
}

/** Constructor function.
 *
 *	@param e11 element 1, 1 of the matrix.
 *	@param e12 element 1, 2 of the matrix.
 *	@param e13 element 1, 3 of the matrix.
 *	@param e21 element 2, 1 of the matrix.
 *	@param e22 element 2, 2 of the matrix.
 *	@param e23 element 2, 3 of the matrix.
 *	@param e31 element 3, 1 of the matrix.
 *	@param e32 element 3, 2 of the matrix.
 *	@param e33 element 3, 3 of the matrix.
 */
matrixSVG.prototype.fromElements = function(e11, e12, e13, e21, e22, e23, e31, e32, e33)
{
	this.e11 = e11;
	this.e12 = e12;
	this.e13 = e13;
	this.e21 = e21;
	this.e22 = e22;
	this.e23 = e23;
	this.e31 = e31;
	this.e32 = e32;
	this.e33 = e33;

	return this;
}

/** Constructor function.
 *
 *	@param attrString string value of the &quot;transform&quot; attribute (currently only &quot;matrix&quot; is accepted)
 */
matrixSVG.prototype.fromAttribute = function(attrString)
{
	str = attrString.substr(7, attrString.length - 8);

	str = str.trim();

	strArray = str.split(&quot;,&quot;);

	// Opera does not use commas to separate the values of the matrix, only spaces.
	if (strArray.length != 6)
		strArray = str.split(&quot; &quot;);

	this.e11 = parseFloat(strArray[0]);
	this.e21 = parseFloat(strArray[1]);
	this.e31 = 0;
	this.e12 = parseFloat(strArray[2]);
	this.e22 = parseFloat(strArray[3]);
	this.e32 = 0;
	this.e13 = parseFloat(strArray[4]);
	this.e23 = parseFloat(strArray[5]);
	this.e33 = 1;

	return this;
}

/** Output function
 *
 *	@return a string that can be used as the &quot;transform&quot; attribute.
 */
matrixSVG.prototype.toAttribute = function()
{
	return &quot;matrix(&quot; + this.e11 + &quot;, &quot; + this.e21 + &quot;, &quot; + this.e12 + &quot;, &quot; + this.e22 + &quot;, &quot; + this.e13 + &quot;, &quot; + this.e23 + &quot;)&quot;;
}

/** Matrix nversion.
 *
 *	@return the inverse of the matrix
 */
matrixSVG.prototype.inv = function()
{
	out = new matrixSVG();

	det = this.e11 * (this.e33 * this.e22 - this.e32 * this.e23) - this.e21 * (this.e33 * this.e12 - this.e32 * this.e13) + this.e31 * (this.e23 * this.e12 - this.e22 * this.e13);

	out.e11 =  (this.e33 * this.e22 - this.e32 * this.e23) / det;
	out.e12 = -(this.e33 * this.e12 - this.e32 * this.e13) / det;
	out.e13 =  (this.e23 * this.e12 - this.e22 * this.e13) / det;
	out.e21 = -(this.e33 * this.e21 - this.e31 * this.e23) / det;
	out.e22 =  (this.e33 * this.e11 - this.e31 * this.e13) / det;
	out.e23 = -(this.e23 * this.e11 - this.e21 * this.e13) / det;
	out.e31 =  (this.e32 * this.e21 - this.e31 * this.e22) / det;
	out.e32 = -(this.e32 * this.e11 - this.e31 * this.e12) / det;
	out.e33 =  (this.e22 * this.e11 - this.e21 * this.e12) / det;

	return out;
}

/** Matrix multiplication.
 *
 *	@param op another svg matrix
 *	@return this * op
 */
matrixSVG.prototype.mult = function(op)
{
	out = new matrixSVG();

	out.e11 = this.e11 * op.e11 + this.e12 * op.e21 + this.e13 * op.e31;
	out.e12 = this.e11 * op.e12 + this.e12 * op.e22 + this.e13 * op.e32;
	out.e13 = this.e11 * op.e13 + this.e12 * op.e23 + this.e13 * op.e33;
	out.e21 = this.e21 * op.e11 + this.e22 * op.e21 + this.e23 * op.e31;
	out.e22 = this.e21 * op.e12 + this.e22 * op.e22 + this.e23 * op.e32;
	out.e23 = this.e21 * op.e13 + this.e22 * op.e23 + this.e23 * op.e33;
	out.e31 = this.e31 * op.e11 + this.e32 * op.e21 + this.e33 * op.e31;
	out.e32 = this.e31 * op.e12 + this.e32 * op.e22 + this.e33 * op.e32;
	out.e33 = this.e31 * op.e13 + this.e32 * op.e23 + this.e33 * op.e33;

	return out;
}

/** Matrix addition.
 *
 *	@param op another svg matrix
 *	@return this + op
 */
matrixSVG.prototype.add = function(op)
{
	out = new matrixSVG();

	out.e11 = this.e11 + op.e11;
	out.e12 = this.e12 + op.e12;
	out.e13 = this.e13 + op.e13;
	out.e21 = this.e21 + op.e21;
	out.e22 = this.e22 + op.e22;
	out.e23 = this.e23 + op.e23;
	out.e31 = this.e31 + op.e31;
	out.e32 = this.e32 + op.e32;
	out.e33 = this.e33 + op.e33;

	return out;
}

/** Matrix mixing.
 *
 *	@param op another svg matrix
 *	@parma contribOp contribution of the other matrix (0 &lt;= contribOp &lt;= 1)
 *	@return (1 - contribOp) * this + contribOp * op
 */
matrixSVG.prototype.mix = function(op, contribOp)
{
	contribThis = 1.0 - contribOp;
	out = new matrixSVG();

	out.e11 = contribThis * this.e11 + contribOp * op.e11;
	out.e12 = contribThis * this.e12 + contribOp * op.e12;
	out.e13 = contribThis * this.e13 + contribOp * op.e13;
	out.e21 = contribThis * this.e21 + contribOp * op.e21;
	out.e22 = contribThis * this.e22 + contribOp * op.e22;
	out.e23 = contribThis * this.e23 + contribOp * op.e23;
	out.e31 = contribThis * this.e31 + contribOp * op.e31;
	out.e32 = contribThis * this.e32 + contribOp * op.e32;
	out.e33 = contribThis * this.e33 + contribOp * op.e33;

	return out;
}

/** Trimming function for strings.
*/
String.prototype.trim = function()
{
	return this.replace(/^\s+|\s+$/g, '');
}

</script>
</svg>
